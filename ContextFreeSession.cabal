-- Initial ContextFreeSession.cabal generated by cabal init.  For further
-- documentation, see http://haskell.org/cabal/users-guide/

name:                ContextFreeSession
version:             0.1.0.0
-- synopsis:
-- description:
-- license:
--license-file:        LICENSE
author:              Bernardo Almeida
maintainer:          balmeida@lasige.di.fc.ul.pt
-- copyright:
category:            Language
build-type:          Simple
extra-source-files:  README.md
cabal-version:       >=1.10

executable freest
  main-is:             Main.hs
  ghc-options:         -threaded
--  ghc-options:         -fwarn-unused-imports
--  ghc-options:         -Wunused-top-binds
--  ghc-options:         -Wall -Wextra
  other-extensions:    FlexibleContexts
  build-depends:       array <= 0.5.3.0,
                       base >=4.8,
                       cond >= 0.4.1.1,
                       containers >=0.5.9,
                       directory >= 1.3.2.0,
                       filepath >= 1.4.2,
                       mtl >= 2.2.1,
                       pretty-terminal >= 0.1.0.0,
                       process >= 1.6.3.0,
                       synchronous-channels >= 0.2
  hs-source-dirs:      src
  default-language:    Haskell2010
  build-tools:         alex, happy
  other-modules:       Compiler,
                       Syntax.Base, Syntax.ProgramVariables, Syntax.TypeVariables,
                       Syntax.Kinds, Syntax.Types, Syntax.Schemes, Syntax.Expressions,
                       Syntax.Show, Syntax.Duality,
                       Parse.Parser, Parse.Lexer, Parse.ParseUtils,
                       Utils.PreludeLoader, Utils.Errors, Utils.FreestState,
                       Validation.TypeChecking, Validation.Typing, Validation.Kinding,
                       Validation.Contractive, Validation.Extract, Validation.Rename,
                       Validation.Substitution,
                       Equivalence.Equivalence, Equivalence.Bisimulation, Equivalence.Grammar,
                       Equivalence.TypeToGrammar, Equivalence.Norm, Equivalence.Normalisation,
                       CodeGen.CodeGen, CodeGen.DatatypeGen,  CodeGen.Annotation,
                       CodeGen.CodeGenState, CodeGen.Translate,
                       Utils.PreludeLoader


-- CFSTEquiv executable uncomment to generate it
   
-- executable CFSTEquiv
--   main-is:             EquivalenceMain.hs
--   build-depends:       base >=4.8, containers >=0.5.9, array <= 0.5.3.0, mtl >= 2.2.1, pretty-terminal >= 0.1
--   hs-source-dirs:      src, src/Main/
--   default-language:    Haskell2010
--   build-tools:         alex, happy
--   other-modules:       Equivalence.Bisimulation, Equivalence.Equivalence, Equivalence.Grammar,
--                        Equivalence.Norm, Equivalence.Normalisation, Equivalence.TypeToGrammar,
--                        Parse.Lexer, Parse.ParseUtils, Parse.Parser,
--                        Syntax.Base, Syntax.Expressions, Syntax.Kinds, Syntax.ProgramVariables,
--                        Syntax.Schemes, Syntax.Show, Syntax.TypeVariables, Syntax.Types,
--                        Utils.Errors, Utils.FreestState, Utils.PreludeLoader,
--                        Validation.Rename, Validation.Substitution, Validation.Kinding,
--                        Validation.Contractive, Validation.Extract

-- GrammarBisim executable uncomment to generate it

-- executable GrammarBisim
--   main-is:             GrammarBisimulation.hs
--   build-depends:       base >=4.8, containers >=0.5.9, array <= 0.5.3.0, mtl >= 2.2.1 
--   hs-source-dirs:      src, src/Main/
--   default-language:    Haskell2010
--   build-tools:         alex, happy
--   other-modules:       Parse.GrammarParser, Parse.GrammarLexer,
--                        Syntax.Base, Syntax.Expressions, Syntax.Kinds, Syntax.ProgramVariables,
--                        Syntax.Schemes, Syntax.Show, Syntax.TypeVariables, Syntax.Types
--                        Equivalence.Grammar, Equivalence.Bisimulation, Equivalence.Norm,
--                        Equivalence.Normalisation, Equivalence.TypeToGrammar,
--                        Utils.Errors, Utils.FreestState,
--                        Validation.Substitution

                       
-- TESTING
                       
test-suite unit-tests
  main-is:             UnitSpec.hs
  Type:                exitcode-stdio-1.0
  other-extensions:    FlexibleContexts
  build-depends:       HUnit >= 1.3.0.0, QuickCheck >=2.8, array <= 0.5.3.0,
                       base >=4.8, cond >= 0.4.1.1, containers >=0.5.9,
                       directory >= 1.3.2.0, hspec >=2.4, hspec-expectations >=0.8,
                       mtl >= 2.2.1, pretty-terminal >= 0.1.0.0, process >= 1.6.3.0,
                       split >= 0.2.2
  hs-source-dirs:      src, test/UnitTests
  default-language:    Haskell2010
  other-modules:       Syntax.Base, Syntax.ProgramVariables, Syntax.TypeVariables,
                       Syntax.Kinds, Syntax.Types, Syntax.Schemes, Syntax.Expressions,
                       Syntax.Show,
                       Parse.Parser, Parse.Lexer, Parse.ParseUtils,
                       Validation.Kinding, Validation.Contractive, Validation.Rename,
                       Validation.Substitution,
                       Equivalence.Equivalence, Equivalence.Bisimulation, Equivalence.Grammar,
                       Equivalence.TypeToGrammar,
                       Equivalence.Norm, Equivalence.Normalisation,
                       Utils.Errors, Utils.FreestState,
                       SpecHelper, Parse.TestParserInvalidSpec
                       Validation.TestKindingValidSpec, Validation.TestKindingInvalidSpec,
                       Validation.TestTypeSchemeKindingSpec, Equivalence.TestEquivalenceInvalidSpec,
                       Equivalence.TestEquivalenceValidSpec, Utils.PreludeLoader,
                       Equivalence.TestBisimValidSpec, Equivalence.TestBisimInvalidSpec,
                       Equivalence.TestGrammarValidSpec, Equivalence.TestGrammarInvalidSpec,
                       Parse.GrammarLexer, Parse.GrammarParser

test-suite program-tests
  main-is:             ProgSpec.hs
  Type:                exitcode-stdio-1.0
  other-extensions:    FlexibleContexts
  build-depends:       HUnit >= 1.3.0.0,
                       QuickCheck >=2.8,
                       array <= 0.5.3.0,
                       base >=4.8,
                       cond >= 0.4.1.1,
                       containers >=0.5.9,
                       directory >= 1.3.2.0,
                       filepath >= 1.4.2,
                       hspec >=2.4,
                       hspec-expectations >=0.8,
                       mtl >= 2.2.1,
                       pretty-terminal >= 0.1.0.0,
                       process >= 1.6.3.0,
                       system-posix-redirect >= 1.1.0.1,
                       bytestring >= 0.10.8.2
  hs-source-dirs:      src, test/Programs
  ghc-options:         -threaded
  default-language:    Haskell2010
  other-modules:       Compiler, CompilerSpec,
                       Syntax.Base, Syntax.ProgramVariables, Syntax.TypeVariables,
                       Syntax.Kinds, Syntax.Types, Syntax.Schemes, Syntax.Expressions,
                       Syntax.Show, Syntax.Duality,
                       Parse.Lexer, Parse.Parser, Parse.ParseUtils,
                       Utils.PreludeLoader, Utils.Errors, Utils.FreestState,
                       Validation.TypeChecking, Validation.Typing, Validation.Kinding,
                       Validation.Contractive, Validation.Extract, Validation.Rename,
                       Validation.Substitution,
                       Equivalence.Equivalence, Equivalence.Bisimulation, Equivalence.Grammar,
                       Equivalence.TypeToGrammar, Equivalence.Norm, Equivalence.Normalisation,
                       CodeGen.CodeGen, CodeGen.DatatypeGen, CodeGen.CodeGenState, CodeGen.Translate,
                       CodeGen.Annotation, Utils.PreludeLoader

                       
-- test-suite testEquiv
--   main-is:             TestEquivalenceSpecMain.hs
--   ghc-options:
--               -fprof-auto-top
--               "-with-rtsopts=-N -p -s -h"
-- --              "-with-rtsopts=-N -p -s -h -i0.1"
--   Type:                exitcode-stdio-1.0
--   other-extensions:    FlexibleContexts
--   build-depends:       HUnit >= 1.3.0.0,
--                        QuickCheck >=2.8,
--                        array <= 0.5.3.0,
--                        base >=4.8,
--                        cond >= 0.4.1.1,
--                        containers >=0.5.9,
--                        directory >= 1.3.2.0,
--                        hspec >=2.4,
--                        hspec-expectations >=0.8,
--                        mtl >= 2.2.1,
--                        pretty-terminal >= 0.1.0.0,
--                        process >= 1.6.3.0,
--                        split >= 0.2.2
--   hs-source-dirs:      src, test/UnitTests
--   default-language:    Haskell2010
--   other-modules:       SpecHelper,
--                        Syntax.Base, Syntax.ProgramVariables, Syntax.TypeVariables,
--                        Syntax.Kinds, Syntax.Types, Syntax.Schemes, Syntax.Expressions,
--                        Syntax.Show,
--                        Parse.Parser, Parse.Lexer, Parse.ParseUtils,
--                        Utils.Errors, Utils.FreestState,
--                        Validation.Kinding,  Validation.Contractive, Validation.Rename,
--                        Validation.Substitution,
--                        Equivalence.Grammar, Equivalence.TypeToGrammar,
--                        Equivalence.Norm, Equivalence.Normalisation, Equivalence.Equivalence, Equivalence.Bisimulation,
--                        Equivalence.TestEquivalenceValidSpec, Equivalence.TestEquivalenceInvalidSpec, Utils.PreludeLoader

-- test-suite testBisim
--   main-is:             TestBisimSpecMain.hs
--   ghc-options:
--               -fprof-auto-top
--               "-with-rtsopts=-p -s -h"
-- --              "-with-rtsopts=-N -p -s -h -i0.1"
--   Type:                exitcode-stdio-1.0
--   other-extensions:    FlexibleContexts
--   build-depends:       HUnit >= 1.3.0.0, QuickCheck >=2.8, array <= 0.5.3.0, base >=4.8,
--                        cond >= 0.4.1.1, containers >=0.5.9, directory >= 1.3.2.0,
--                        hspec >=2.4, hspec-expectations >=0.8, mtl >= 2.2.1,
--                        pretty-terminal >= 0.1.0.0, process >= 1.6.3.0, split >= 0.2.2
--   hs-source-dirs:      src, test/UnitTests
--   default-language:    Haskell2010
--   other-modules:       SpecHelper,
--                        Syntax.Base, Syntax.ProgramVariables, Syntax.TypeVariables,
--                        Syntax.Kinds, Syntax.Types, Syntax.Schemes, Syntax.Expressions,
--                        Syntax.Show,
--                        Parse.Parser, Parse.Lexer, Parse.ParseUtils,
--                        Utils.Errors, Utils.FreestState,
--                        Validation.Kinding,  Validation.Contractive, Validation.Rename,
--                        Validation.Substitution,
--                        Equivalence.Grammar, Equivalence.TypeToGrammar,
--                        Equivalence.Norm, Equivalence.Normalisation, Equivalence.Equivalence, Equivalence.Bisimulation,
--                        Equivalence.TestEquivalenceValidSpec, Equivalence.TestEquivalenceInvalidSpec, Utils.PreludeLoader, Equivalence.TestBisimValidSpec, Equivalence.TestBisimInvalidSpec


-- test-suite testQuickCheck
--   main-is:             QuickCheckSpec.hs
--   ghc-options:
--               -fprof-auto-top
--               "-with-rtsopts=-p -s -h"
-- --              "-with-rtsopts=-N -p -s -h -i0.1"
--   Type:                exitcode-stdio-1.0
--   other-extensions:    FlexibleContexts
--   build-depends:       HUnit >= 1.3.0.0, QuickCheck >=2.8, array <= 0.5.3.0, base >=4.8,
--                        cond >= 0.4.1.1, containers >=0.5.9, directory >= 1.3.2.0,
--                        hspec >=2.4, hspec-expectations >=0.8, mtl >= 2.2.1,
--                        pretty-terminal >= 0.1.0.0, process >= 1.6.3.0, split >= 0.2.2
--   hs-source-dirs:      test/, test/QuickCheck, src
--   default-language:    Haskell2010
--   other-modules:       Syntax.Base, Syntax.ProgramVariables, Syntax.TypeVariables,
--                        Syntax.Kinds, Syntax.Types, Syntax.Schemes, Syntax.Expressions,
--                        Syntax.Show,
--                        Parse.Parser, Parse.Lexer, Parse.ParseUtils,
--                        Utils.Errors, Utils.FreestState,
--                        Validation.Kinding,  Validation.Contractive, Validation.Rename,
--                        Validation.Substitution,
--                        Equivalence.Grammar, Equivalence.TypeToGrammar,
--                        Equivalence.Norm, Equivalence.Normalisation, Equivalence.Equivalence, Equivalence.Bisimulation, Utils.PreludeLoader, QuickCheck.ArbitraryTypes, QuickCheck.TestValidTypes


-- test-suite testGrammars
--   main-is:             TestGrammarSpecMain.hs
--   Type:                exitcode-stdio-1.0
--   other-extensions:    FlexibleContexts
--   build-depends:       HUnit >= 1.3.0.0, QuickCheck >=2.8, array <= 0.5.3.0, base >=4.8,
--                        cond >= 0.4.1.1, containers >=0.5.9, directory >= 1.3.2.0,
--                        hspec >=2.4, hspec-expectations >=0.8, mtl >= 2.2.1,
--                        pretty-terminal >= 0.1.0.0, process >= 1.6.3.0, split >= 0.2.2
--   hs-source-dirs:      test/UnitTests, src
--   default-language:    Haskell2010
--   other-modules: Equivalence.Bisimulation, Equivalence.Grammar, Parse.GrammarLexer,
--         Parse.GrammarParser, Equivalence.Norm, Equivalence.Normalisation,
--         Equivalence.TypeToGrammar, Parse.Lexer, Parse.ParseUtils, Parse.Parser,
--         SpecHelper, Syntax.Base, Syntax.Expressions, Syntax.Kinds,
--         Syntax.ProgramVariables, Syntax.Schemes, Syntax.Show, Syntax.TypeVariables,
--         Syntax.Types, Utils.Errors, Utils.FreestState, Utils.PreludeLoader,
--         Validation.Rename, Validation.Substitution, Equivalence.TestGrammarValidSpec


