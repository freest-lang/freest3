-- Basic types

Int
Int

Char
Char

Bool
Bool

()
()

-- Functional types

[a:Int,b:Bool]
[a:Int, b:Bool]

Int -> Bool 
Int -> Bool 

Bool -o Int
Bool -o Int

(Char, Int)
(Char, Int)

-- Session Types

Skip
Skip

!Int
!Int

?Bool
?Bool

!Int ; ?Bool
!Int ; ?Bool

+{A: ?Int, B: ?Bool}
+{B: ?Bool, A: ?Int}

&{A: ?Int, B: ?Bool, C: Skip}
&{C: Skip, B: ?Bool, A: ?Int}

-- Recursion

rec x. !Int
rec y. !Int

rec x. ?Bool -> x
rec y. ?Bool -> y

rec x. rec y. Skip ; x ; y 
rec y. rec x. Skip ; y ; x

rec x. Skip ; rec x. Skip
rec x. Skip ; rec x. Skip 

rec x. Skip ; x; rec x. Skip ; x  
rec x. Skip ; x; rec x. Skip ; x  

rec x. Skip ; x; rec y. Skip ; y   
rec y. Skip ; y; rec x. Skip ; x

rec x. &{A: ?Int, B: !Int; x} 
rec y. &{A: ?Int, B: !Int; y}

rec x. [A: ?Int, B: !Int; x]
rec y. [A: ?Int, B: !Int; y]

+{A: ?Int, B: rec x. &{C: rec y. !Int; y; x}}
+{B: rec y. &{C: rec x. !Int; x; y}, A: ?Int}

-- Polymorphism

-- forall a :: TU => a
-- forall b :: TU => b

-- forall b :: TU => b
-- forall b :: TU => b

-- forall a :: TU => forall b :: TU => a
-- forall c :: TU => forall d :: TU => c

-- (forall x :: SU => !Int;x); forall y :: SU => !Bool;y
-- (forall y :: SU => !Int;y); forall x :: SU => !Bool;x

-- forall x :: SU => !Int;x; forall y :: SU => !Bool;y
-- forall y :: SU => !Int;y; forall x :: SU => !Bool;x

