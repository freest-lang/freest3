Int
  TU
Bool
  TU
Char
  TU
()
  TU
Skip
  SU
!Int
  SL
!Char
  SL
?Bool
  SL
?Char
  SL
Int -> Bool
  TU
Int -o Bool
  TL
Char -> Skip
  TU
Char -o Skip
  TL
(Int,Bool)
  TL
(!Char,())
  TL
(!Int, Skip)
  TL
[A:Int,B:Bool]
  TU
!Int;?Bool
  SL
Skip;Skip
  SU
!Int;Skip
  SL
Skip;+{S:Skip,I:!Int}
  SL

-- recursive types

rec x . ?Bool
  SL
  
rec x . Skip
  SU
  
rec x . Skip
  SL
  
rec x . Skip; Skip
  SU
  
rec x . Skip; (Skip; Skip); Skip
  SU
  
rec x . Skip; x
  SU
  
rec x . Skip; x
  SL
  
rec x . Skip; ((Skip; x); Skip); Skip
  SU
  
rec x . Skip; ((Skip; x); Skip); Skip
  SL
  
rec x . !Int; Skip; ?Int
  SL
  
rec tree . &{Leaf: Skip, Node: ?Int;tree;tree}
  SL
  
rec treeChannel . +{Leaf: Skip, Node: !Int;treeChannel;treeChannel}
  SL
  
rec alpha . !Int;rec treeChannel . +{Leaf:Skip, Node:!Int;treeChannel;treeChannel};rec treeChannel . +{Leaf:Skip, Node:!Int;treeChannel;treeChannel};x
  SL
