[]
Int
TU

[]
Bool
TU

[]
Char
TU

[]
()
TU

[]
Skip
SU

[]
!Int
SL

[]
!Char
SL

[]
?Bool
SL

[]
?Char
SL

[]
Int -> Bool
TU

[]
Int -o Bool
TL

[]
Char -> Skip
TU

[]
Char -o Skip
TL

[]
(Int,Bool)
TU

[]
!Int;?Bool
SL

[]
Skip;Skip
SU

[]
!Int;Skip
SL

[]
Skip;+{S:Skip,I:!Int}
SL

-- recursive types

[]
rec x . ?Bool
SL

[]
rec x . (!Int; Skip; ?Int)
SL
  
[]
rec tree : SL . &{Leaf: Skip, Node: ?Int;tree;tree}
SL
  
[]
rec treeChannel : SL . +{Leaf: Skip, Node: !Int;treeChannel;treeChannel}
SL
  
[("x", SL)]
rec alpha : SL . !Int ; rec treeChannel1 : SL . +{Leaf:Skip, Node:!Int;treeChannel1;treeChannel1} ; rec treeChannel2 : SL . +{Leaf:Skip, Node:!Int;treeChannel2;treeChannel2};x
SL

-- explicitely typed recursive types

[]
rec a : TU . (a, Int)
TL

[]
rec b : TU . (b, Int -> Char)
TL

-- Pairs

-- (Un, Un)
[]
(Int, Bool) 
TU

[]
(Int -> Bool, Char -> (Bool -> Char)) 
TU

[]
(Skip, Bool) 
TU

[]
(Bool, Skip) 
TU

[]
(Int, Bool) 
TL

[]
(Int -> Bool, Char -> (Bool -> Char)) 
TL

[]
(Skip, Bool) 
TL

[]
(Bool, Skip) 
TL

-- (Lin, Lin)
[]
L(!Bool, ?Int)
TL

[]
L(!Bool, Int -o Char)
TL

[]
L(!Bool -o Int -o Char, ?Int;&{A:Skip, B:!Bool})
TL

-- (Un, Lin)
[]
L(Bool, ?Int)
TL

[]
L(Skip, Skip -o Skip)
TL

[]
L(Bool -> Char -> Int, ?Int -o Bool -> Int)
TL

-- (Lin, Un)
[]
L(!Bool, Int)
TL

[]
L(!Bool, Skip)
TL

[]
L(Bool -o Char -> (Int -> ()), Int -> Skip -> ())
TL

-- dualof

[]
rec x . dualof !Int
SL

-- Quick Check

[("x", SL) , ("y", SL) , ("z", SL)]
!Bool;(((!Int;Skip);(Skip;+{A: y, B: Skip}));(Skip;(rec y_0:SU. (&{A: ((?Char;(Skip;x));Skip), C: !Bool};Skip))))
SL

[("x", SL) , ("y", SL) , ("z", SL)]
!Bool;((!Int;+{A: y, B: Skip});(rec y_1:SU. &{A: ((?Char;Skip);x), C: !Bool}))
SL

[("x", SL) , ("y", SL) , ("z", SL)]
&{B: (&{C: (rec x_8:SL. (rec x_9:SU. (((+{A: y, C: z};?Bool);+{B: Skip, C: ?Bool});+{A: (rec x_10:SU. (rec y_11:SU. (rec y_12:SL. !()))), C: (Skip;Skip)})))};(((rec z_13:SL. +{B: ((Skip;(Skip;(Skip;(x;?Bool))));(?Bool;(Skip;!())))});(rec y_14:SU. !()));?Bool)), C: (?Char;(((rec y_15:SU. (Skip;((Skip;z);((y_15;(x;x));(Skip;(Skip;!()))))));Skip);+{A: (?Int;(&{B: Skip};(y;Skip)))}))}
SL

[]
rec y:SU. (!Bool;Skip)
SL

