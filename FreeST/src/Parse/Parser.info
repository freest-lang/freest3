-----------------------------------------------------------------------------
Info file generated by Happy Version 1.19.8 from FreeST/src/Parse/Parser.y
-----------------------------------------------------------------------------

state 79 contains 3 shift/reduce conflicts.
state 152 contains 3 shift/reduce conflicts.

terminal Lambda is unused

-----------------------------------------------------------------------------
Grammar
-----------------------------------------------------------------------------
	%start_types -> Type                               (0)
	%start_typeScheme -> TypeScheme                    (1)
	%start_terms -> Prog                               (2)
	%start_kinds -> Kind                               (3)
	%start_expr -> Expr                                (4)
	%start_schemes -> Schemes                          (5)
	Prog -> Decl                                       (6)
	Prog -> Decl NL Prog                               (7)
	NL -> nl NL                                        (8)
	NL -> nl                                           (9)
	Decl -> ProgVar ':' TypeScheme                     (10)
	Decl -> ProgVar ProgVarWildSeq '=' Expr            (11)
	Decl -> type TypeNameKind KindBindEmptyList '=' Type   (12)
	Decl -> data TypeNameKind KindBindEmptyList '=' DataCons   (13)
	DataCons -> DataCon                                (14)
	DataCons -> DataCon '|' DataCons                   (15)
	DataCon -> Constructor TypeSeq                     (16)
	Expr -> Expr '$' Expr                              (17)
	Expr -> let ProgVarWild '=' Expr in Expr           (18)
	Expr -> Expr ';' Expr                              (19)
	Expr -> let '(' ProgVarWildList ')' '=' Expr in Expr   (20)
	Expr -> if Expr then Expr else Expr                (21)
	Expr -> new Type                                   (22)
	Expr -> match Expr with '{' MatchMap '}'           (23)
	Expr -> case Expr of '{' CaseMap '}'               (24)
	Expr -> Expr '||' Expr                             (25)
	Expr -> Expr '&&' Expr                             (26)
	Expr -> Expr CMP Expr                              (27)
	Expr -> Expr '+' Expr                              (28)
	Expr -> Expr '-' Expr                              (29)
	Expr -> Expr '*' Expr                              (30)
	Expr -> Expr '/' Expr                              (31)
	Expr -> App                                        (32)
	App -> App Primary                                 (33)
	App -> select ArbitraryProgVar                     (34)
	App -> '-' App                                     (35)
	App -> Primary                                     (36)
	Primary -> INT                                     (37)
	Primary -> BOOL                                    (38)
	Primary -> CHAR                                    (39)
	Primary -> '()'                                    (40)
	Primary -> ProgVar '[' TypeList ']'                (41)
	Primary -> ArbitraryProgVar                        (42)
	Primary -> '(' lambda LambdaProgVarWildTBindList Arrow Expr ')'   (43)
	Primary -> '(' Tuple ')'                           (44)
	ProgVarWildTBind -> ProgVarWild ':' Type           (45)
	LambdaProgVarWildTBindList -> ProgVarWildTBind     (46)
	LambdaProgVarWildTBindList -> ProgVarWildTBind LambdaProgVarWildTBindList   (47)
	ProgVarWildList -> ProgVarWild ',' ProgVarWildList   (48)
	ProgVarWildList -> ProgVarWild ',' ProgVarWild     (49)
	Tuple -> Expr                                      (50)
	Tuple -> Expr ',' Tuple                            (51)
	MatchMap -> Match                                  (52)
	MatchMap -> Match ',' MatchMap                     (53)
	Match -> ArbitraryProgVar ProgVarWild '->' Expr    (54)
	CaseMap -> Case                                    (55)
	CaseMap -> Case ',' CaseMap                        (56)
	Case -> Constructor ProgVarWildSeq '->' Expr       (57)
	TypeScheme -> forall KindBindList '=>' Type        (58)
	TypeScheme -> Type                                 (59)
	Type -> BasicType                                  (60)
	Type -> Type Arrow Type                            (61)
	Type -> '(' TupleType ')'                          (62)
	Type -> Skip                                       (63)
	Type -> Type ';' Type                              (64)
	Type -> Polarity BasicType                         (65)
	Type -> ChoiceView '{' FieldList '}'               (66)
	Type -> rec KindBind '.' Type                      (67)
	Type -> TypeVar                                    (68)
	Type -> dualof Type                                (69)
	Type -> TypeName                                   (70)
	BasicType -> Int                                   (71)
	BasicType -> Char                                  (72)
	BasicType -> Bool                                  (73)
	BasicType -> '()'                                  (74)
	TupleType -> Type                                  (75)
	TupleType -> Type ',' TupleType                    (76)
	Polarity -> '?'                                    (77)
	Polarity -> '!'                                    (78)
	Arrow -> '->'                                      (79)
	Arrow -> '-o'                                      (80)
	ChoiceView -> '+'                                  (81)
	ChoiceView -> '&'                                  (82)
	FieldList -> Field                                 (83)
	FieldList -> Field ',' FieldList                   (84)
	Field -> ArbitraryProgVar ':' Type                 (85)
	TypeList -> Type                                   (86)
	TypeList -> Type ',' TypeList                      (87)
	TypeSeq ->                                         (88)
	TypeSeq -> Type TypeSeq                            (89)
	Kind -> SU                                         (90)
	Kind -> SL                                         (91)
	Kind -> TU                                         (92)
	Kind -> TL                                         (93)
	ArbitraryProgVar -> ProgVar                        (94)
	ArbitraryProgVar -> Constructor                    (95)
	ProgVar -> LOWER_ID                                (96)
	Constructor -> UPPER_ID                            (97)
	ProgVarWild -> ProgVar                             (98)
	ProgVarWild -> '_'                                 (99)
	ProgVarWildSeq ->                                  (100)
	ProgVarWildSeq -> ProgVarWild ProgVarWildSeq       (101)
	TypeVar -> LOWER_ID                                (102)
	TypeName -> UPPER_ID                               (103)
	KindBind -> TypeVar ':' Kind                       (104)
	KindBind -> TypeVar                                (105)
	TypeNameKind -> TypeName ':' Kind                  (106)
	TypeNameKind -> TypeName                           (107)
	KindBindList -> KindBind                           (108)
	KindBindList -> KindBind ',' KindBindList          (109)
	KindBindEmptyList ->                               (110)
	KindBindEmptyList -> KindBindList                  (111)
	Schemes -> TypeScheme NL TypeScheme                (112)

-----------------------------------------------------------------------------
Terminals
-----------------------------------------------------------------------------
	nl             { TokenNL _ }
	Int            { TokenIntT _ }
	Char           { TokenCharT _ }
	Bool           { TokenBoolT _ }
	'()'           { TokenUnit _ }
	'->'           { TokenUnArrow _ }
	'-o'           { TokenLinArrow _ }
	lambda         { TokenLambda _ }
	Lambda         { TokenUpperLambda _ }
	Skip           { TokenSkip _ }
	'('            { TokenLParen _ }
	')'            { TokenRParen _ }
	','            { TokenComma _ }
	'['            { TokenLBracket _ }
	']'            { TokenRBracket _ }
	':'            { TokenColon _ }
	';'            { TokenSemi _ }
	'!'            { TokenMOut _ }
	'?'            { TokenMIn _ }
	'{'            { TokenLBrace _ }
	'}'            { TokenRBrace _ }
	'=>'           { TokenFArrow _ }
	'&&'           { TokenConjunction _ }
	'||'           { TokenDisjunction _ }
	'/'            { TokenDiv _ }
	'&'            { TokenAmpersand _ }
	'+'            { TokenPlus _ }
	'-'            { TokenMinus _ }
	'*'            { TokenTimes _ }
	'_'            { TokenWild _ }
	'$'            { TokenDollar _ }
	'.'            { TokenDot _ }
	CMP            { TokenCmp _ _ }
	UPPER_ID       { TokenUpperId _ _ }
	LOWER_ID       { TokenLowerId _ _ }
	rec            { TokenRec _ }
	SU             { TokenSU _ }
	SL             { TokenSL _ }
	TU             { TokenTU _ }
	TL             { TokenTL _ }
	INT            { TokenInt _ _ }
	BOOL           { TokenBool _ _ }
	CHAR           { TokenChar _ _ }
	let            { TokenLet _ }
	in             { TokenIn _ }
	'='            { TokenEq _ }
	data           { TokenData _ }
	type           { TokenType _ }
	'|'            { TokenPipe _ }
	if             { TokenIf _ }
	then           { TokenThen _ }
	else           { TokenElse _ }
	new            { TokenNew _ }
	select         { TokenSelect _ }
	match          { TokenMatch _ }
	with           { TokenWith _ }
	case           { TokenCase _ }
	of             { TokenOf _ }
	forall         { TokenForall _ }
	dualof         { TokenDualof _ }

-----------------------------------------------------------------------------
Non-terminals
-----------------------------------------------------------------------------
	%start_types    rule  0
	%start_typeScheme rule  1
	%start_terms    rule  2
	%start_kinds    rule  3
	%start_expr     rule  4
	%start_schemes  rule  5
	Prog            rules 6, 7
	NL              rules 8, 9
	Decl            rules 10, 11, 12, 13
	DataCons        rules 14, 15
	DataCon         rule  16
	Expr            rules 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32
	App             rules 33, 34, 35, 36
	Primary         rules 37, 38, 39, 40, 41, 42, 43, 44
	ProgVarWildTBind rule  45
	LambdaProgVarWildTBindList rules 46, 47
	ProgVarWildList rules 48, 49
	Tuple           rules 50, 51
	MatchMap        rules 52, 53
	Match           rule  54
	CaseMap         rules 55, 56
	Case            rule  57
	TypeScheme      rules 58, 59
	Type            rules 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70
	BasicType       rules 71, 72, 73, 74
	TupleType       rules 75, 76
	Polarity        rules 77, 78
	Arrow           rules 79, 80
	ChoiceView      rules 81, 82
	FieldList       rules 83, 84
	Field           rule  85
	TypeList        rules 86, 87
	TypeSeq         rules 88, 89
	Kind            rules 90, 91, 92, 93
	ArbitraryProgVar rules 94, 95
	ProgVar         rule  96
	Constructor     rule  97
	ProgVarWild     rules 98, 99
	ProgVarWildSeq  rules 100, 101
	TypeVar         rule  102
	TypeName        rule  103
	KindBind        rules 104, 105
	TypeNameKind    rules 106, 107
	KindBindList    rules 108, 109
	KindBindEmptyList rules 110, 111
	Schemes         rule  112

-----------------------------------------------------------------------------
States
-----------------------------------------------------------------------------
State 0


	Int            shift, and enter state 20
	Char           shift, and enter state 21
	Bool           shift, and enter state 22
	'()'           shift, and enter state 23
	Skip           shift, and enter state 24
	'('            shift, and enter state 25
	'!'            shift, and enter state 26
	'?'            shift, and enter state 27
	'&'            shift, and enter state 28
	'+'            shift, and enter state 29
	UPPER_ID       shift, and enter state 30
	LOWER_ID       shift, and enter state 31
	rec            shift, and enter state 32
	dualof         shift, and enter state 34

	Type           goto state 62
	BasicType      goto state 14
	Polarity       goto state 15
	ChoiceView     goto state 16
	TypeVar        goto state 17
	TypeName       goto state 18

State 1


	Int            shift, and enter state 20
	Char           shift, and enter state 21
	Bool           shift, and enter state 22
	'()'           shift, and enter state 23
	Skip           shift, and enter state 24
	'('            shift, and enter state 25
	'!'            shift, and enter state 26
	'?'            shift, and enter state 27
	'&'            shift, and enter state 28
	'+'            shift, and enter state 29
	UPPER_ID       shift, and enter state 30
	LOWER_ID       shift, and enter state 31
	rec            shift, and enter state 32
	forall         shift, and enter state 33
	dualof         shift, and enter state 34

	TypeScheme     goto state 61
	Type           goto state 13
	BasicType      goto state 14
	Polarity       goto state 15
	ChoiceView     goto state 16
	TypeVar        goto state 17
	TypeName       goto state 18

State 2


	LOWER_ID       shift, and enter state 9
	data           shift, and enter state 10
	type           shift, and enter state 11

	Prog           goto state 59
	Decl           goto state 60
	ProgVar        goto state 8

State 3


	SU             shift, and enter state 55
	SL             shift, and enter state 56
	TU             shift, and enter state 57
	TL             shift, and enter state 58

	Kind           goto state 54

State 4


	'()'           shift, and enter state 41
	'('            shift, and enter state 42
	'-'            shift, and enter state 43
	UPPER_ID       shift, and enter state 44
	LOWER_ID       shift, and enter state 9
	INT            shift, and enter state 45
	BOOL           shift, and enter state 46
	CHAR           shift, and enter state 47
	let            shift, and enter state 48
	if             shift, and enter state 49
	new            shift, and enter state 50
	select         shift, and enter state 51
	match          shift, and enter state 52
	case           shift, and enter state 53

	Expr           goto state 35
	App            goto state 36
	Primary        goto state 37
	ArbitraryProgVargoto state 38
	ProgVar        goto state 39
	Constructor    goto state 40

State 5


	Int            shift, and enter state 20
	Char           shift, and enter state 21
	Bool           shift, and enter state 22
	'()'           shift, and enter state 23
	Skip           shift, and enter state 24
	'('            shift, and enter state 25
	'!'            shift, and enter state 26
	'?'            shift, and enter state 27
	'&'            shift, and enter state 28
	'+'            shift, and enter state 29
	UPPER_ID       shift, and enter state 30
	LOWER_ID       shift, and enter state 31
	rec            shift, and enter state 32
	forall         shift, and enter state 33
	dualof         shift, and enter state 34

	TypeScheme     goto state 12
	Type           goto state 13
	BasicType      goto state 14
	Polarity       goto state 15
	ChoiceView     goto state 16
	TypeVar        goto state 17
	TypeName       goto state 18
	Schemes        goto state 19

State 6


	LOWER_ID       shift, and enter state 9
	data           shift, and enter state 10
	type           shift, and enter state 11

	Decl           goto state 7
	ProgVar        goto state 8

State 7

	Prog -> Decl .                                      (rule 6)



State 8

	Decl -> ProgVar . ':' TypeScheme                    (rule 10)
	Decl -> ProgVar . ProgVarWildSeq '=' Expr           (rule 11)

	':'            shift, and enter state 109
	'_'            shift, and enter state 78
	LOWER_ID       shift, and enter state 9
	'='            reduce using rule 100

	ProgVar        goto state 75
	ProgVarWild    goto state 107
	ProgVarWildSeq goto state 108

State 9

	ProgVar -> LOWER_ID .                               (rule 96)

	nl             reduce using rule 96
	'()'           reduce using rule 96
	'->'           reduce using rule 96
	'('            reduce using rule 96
	')'            reduce using rule 96
	','            reduce using rule 96
	'['            reduce using rule 96
	':'            reduce using rule 96
	';'            reduce using rule 96
	'}'            reduce using rule 96
	'&&'           reduce using rule 96
	'||'           reduce using rule 96
	'/'            reduce using rule 96
	'+'            reduce using rule 96
	'-'            reduce using rule 96
	'*'            reduce using rule 96
	'_'            reduce using rule 96
	'$'            reduce using rule 96
	CMP            reduce using rule 96
	UPPER_ID       reduce using rule 96
	LOWER_ID       reduce using rule 96
	INT            reduce using rule 96
	BOOL           reduce using rule 96
	CHAR           reduce using rule 96
	in             reduce using rule 96
	'='            reduce using rule 96
	then           reduce using rule 96
	else           reduce using rule 96
	with           reduce using rule 96
	of             reduce using rule 96
	%eof           reduce using rule 96


State 10

	Decl -> data . TypeNameKind KindBindEmptyList '=' DataCons    (rule 13)

	UPPER_ID       shift, and enter state 30

	TypeName       goto state 104
	TypeNameKind   goto state 106

State 11

	Decl -> type . TypeNameKind KindBindEmptyList '=' Type    (rule 12)

	UPPER_ID       shift, and enter state 30

	TypeName       goto state 104
	TypeNameKind   goto state 105

State 12

	Schemes -> TypeScheme . NL TypeScheme               (rule 112)

	nl             shift, and enter state 68

	NL             goto state 103

State 13

	TypeScheme -> Type .                                (rule 59)
	Type -> Type . Arrow Type                           (rule 61)
	Type -> Type . ';' Type                             (rule 64)

	nl             reduce using rule 59
	'->'           shift, and enter state 64
	'-o'           shift, and enter state 65
	';'            shift, and enter state 66
	%eof           reduce using rule 59

	Arrow          goto state 63

State 14

	Type -> BasicType .                                 (rule 60)

	nl             reduce using rule 60
	Int            reduce using rule 60
	Char           reduce using rule 60
	Bool           reduce using rule 60
	'()'           reduce using rule 60
	'->'           reduce using rule 60
	'-o'           reduce using rule 60
	Skip           reduce using rule 60
	'('            reduce using rule 60
	')'            reduce using rule 60
	','            reduce using rule 60
	']'            reduce using rule 60
	';'            reduce using rule 60
	'!'            reduce using rule 60
	'?'            reduce using rule 60
	'}'            reduce using rule 60
	'&&'           reduce using rule 60
	'||'           reduce using rule 60
	'/'            reduce using rule 60
	'&'            reduce using rule 60
	'+'            reduce using rule 60
	'-'            reduce using rule 60
	'*'            reduce using rule 60
	'_'            reduce using rule 60
	'$'            reduce using rule 60
	CMP            reduce using rule 60
	UPPER_ID       reduce using rule 60
	LOWER_ID       reduce using rule 60
	rec            reduce using rule 60
	in             reduce using rule 60
	'|'            reduce using rule 60
	then           reduce using rule 60
	else           reduce using rule 60
	with           reduce using rule 60
	of             reduce using rule 60
	dualof         reduce using rule 60
	%eof           reduce using rule 60


State 15

	Type -> Polarity . BasicType                        (rule 65)

	Int            shift, and enter state 20
	Char           shift, and enter state 21
	Bool           shift, and enter state 22
	'()'           shift, and enter state 23

	BasicType      goto state 102

State 16

	Type -> ChoiceView . '{' FieldList '}'              (rule 66)

	'{'            shift, and enter state 101


State 17

	Type -> TypeVar .                                   (rule 68)

	nl             reduce using rule 68
	Int            reduce using rule 68
	Char           reduce using rule 68
	Bool           reduce using rule 68
	'()'           reduce using rule 68
	'->'           reduce using rule 68
	'-o'           reduce using rule 68
	Skip           reduce using rule 68
	'('            reduce using rule 68
	')'            reduce using rule 68
	','            reduce using rule 68
	']'            reduce using rule 68
	';'            reduce using rule 68
	'!'            reduce using rule 68
	'?'            reduce using rule 68
	'}'            reduce using rule 68
	'&&'           reduce using rule 68
	'||'           reduce using rule 68
	'/'            reduce using rule 68
	'&'            reduce using rule 68
	'+'            reduce using rule 68
	'-'            reduce using rule 68
	'*'            reduce using rule 68
	'_'            reduce using rule 68
	'$'            reduce using rule 68
	CMP            reduce using rule 68
	UPPER_ID       reduce using rule 68
	LOWER_ID       reduce using rule 68
	rec            reduce using rule 68
	in             reduce using rule 68
	'|'            reduce using rule 68
	then           reduce using rule 68
	else           reduce using rule 68
	with           reduce using rule 68
	of             reduce using rule 68
	dualof         reduce using rule 68
	%eof           reduce using rule 68


State 18

	Type -> TypeName .                                  (rule 70)

	nl             reduce using rule 70
	Int            reduce using rule 70
	Char           reduce using rule 70
	Bool           reduce using rule 70
	'()'           reduce using rule 70
	'->'           reduce using rule 70
	'-o'           reduce using rule 70
	Skip           reduce using rule 70
	'('            reduce using rule 70
	')'            reduce using rule 70
	','            reduce using rule 70
	']'            reduce using rule 70
	';'            reduce using rule 70
	'!'            reduce using rule 70
	'?'            reduce using rule 70
	'}'            reduce using rule 70
	'&&'           reduce using rule 70
	'||'           reduce using rule 70
	'/'            reduce using rule 70
	'&'            reduce using rule 70
	'+'            reduce using rule 70
	'-'            reduce using rule 70
	'*'            reduce using rule 70
	'_'            reduce using rule 70
	'$'            reduce using rule 70
	CMP            reduce using rule 70
	UPPER_ID       reduce using rule 70
	LOWER_ID       reduce using rule 70
	rec            reduce using rule 70
	in             reduce using rule 70
	'|'            reduce using rule 70
	then           reduce using rule 70
	else           reduce using rule 70
	with           reduce using rule 70
	of             reduce using rule 70
	dualof         reduce using rule 70
	%eof           reduce using rule 70


State 19

	%start_schemes -> Schemes .                         (rule 5)

	%eof           accept


State 20

	BasicType -> Int .                                  (rule 71)

	nl             reduce using rule 71
	Int            reduce using rule 71
	Char           reduce using rule 71
	Bool           reduce using rule 71
	'()'           reduce using rule 71
	'->'           reduce using rule 71
	'-o'           reduce using rule 71
	Skip           reduce using rule 71
	'('            reduce using rule 71
	')'            reduce using rule 71
	','            reduce using rule 71
	']'            reduce using rule 71
	';'            reduce using rule 71
	'!'            reduce using rule 71
	'?'            reduce using rule 71
	'}'            reduce using rule 71
	'&&'           reduce using rule 71
	'||'           reduce using rule 71
	'/'            reduce using rule 71
	'&'            reduce using rule 71
	'+'            reduce using rule 71
	'-'            reduce using rule 71
	'*'            reduce using rule 71
	'_'            reduce using rule 71
	'$'            reduce using rule 71
	CMP            reduce using rule 71
	UPPER_ID       reduce using rule 71
	LOWER_ID       reduce using rule 71
	rec            reduce using rule 71
	in             reduce using rule 71
	'|'            reduce using rule 71
	then           reduce using rule 71
	else           reduce using rule 71
	with           reduce using rule 71
	of             reduce using rule 71
	dualof         reduce using rule 71
	%eof           reduce using rule 71


State 21

	BasicType -> Char .                                 (rule 72)

	nl             reduce using rule 72
	Int            reduce using rule 72
	Char           reduce using rule 72
	Bool           reduce using rule 72
	'()'           reduce using rule 72
	'->'           reduce using rule 72
	'-o'           reduce using rule 72
	Skip           reduce using rule 72
	'('            reduce using rule 72
	')'            reduce using rule 72
	','            reduce using rule 72
	']'            reduce using rule 72
	';'            reduce using rule 72
	'!'            reduce using rule 72
	'?'            reduce using rule 72
	'}'            reduce using rule 72
	'&&'           reduce using rule 72
	'||'           reduce using rule 72
	'/'            reduce using rule 72
	'&'            reduce using rule 72
	'+'            reduce using rule 72
	'-'            reduce using rule 72
	'*'            reduce using rule 72
	'_'            reduce using rule 72
	'$'            reduce using rule 72
	CMP            reduce using rule 72
	UPPER_ID       reduce using rule 72
	LOWER_ID       reduce using rule 72
	rec            reduce using rule 72
	in             reduce using rule 72
	'|'            reduce using rule 72
	then           reduce using rule 72
	else           reduce using rule 72
	with           reduce using rule 72
	of             reduce using rule 72
	dualof         reduce using rule 72
	%eof           reduce using rule 72


State 22

	BasicType -> Bool .                                 (rule 73)

	nl             reduce using rule 73
	Int            reduce using rule 73
	Char           reduce using rule 73
	Bool           reduce using rule 73
	'()'           reduce using rule 73
	'->'           reduce using rule 73
	'-o'           reduce using rule 73
	Skip           reduce using rule 73
	'('            reduce using rule 73
	')'            reduce using rule 73
	','            reduce using rule 73
	']'            reduce using rule 73
	';'            reduce using rule 73
	'!'            reduce using rule 73
	'?'            reduce using rule 73
	'}'            reduce using rule 73
	'&&'           reduce using rule 73
	'||'           reduce using rule 73
	'/'            reduce using rule 73
	'&'            reduce using rule 73
	'+'            reduce using rule 73
	'-'            reduce using rule 73
	'*'            reduce using rule 73
	'_'            reduce using rule 73
	'$'            reduce using rule 73
	CMP            reduce using rule 73
	UPPER_ID       reduce using rule 73
	LOWER_ID       reduce using rule 73
	rec            reduce using rule 73
	in             reduce using rule 73
	'|'            reduce using rule 73
	then           reduce using rule 73
	else           reduce using rule 73
	with           reduce using rule 73
	of             reduce using rule 73
	dualof         reduce using rule 73
	%eof           reduce using rule 73


State 23

	BasicType -> '()' .                                 (rule 74)

	nl             reduce using rule 74
	Int            reduce using rule 74
	Char           reduce using rule 74
	Bool           reduce using rule 74
	'()'           reduce using rule 74
	'->'           reduce using rule 74
	'-o'           reduce using rule 74
	Skip           reduce using rule 74
	'('            reduce using rule 74
	')'            reduce using rule 74
	','            reduce using rule 74
	']'            reduce using rule 74
	';'            reduce using rule 74
	'!'            reduce using rule 74
	'?'            reduce using rule 74
	'}'            reduce using rule 74
	'&&'           reduce using rule 74
	'||'           reduce using rule 74
	'/'            reduce using rule 74
	'&'            reduce using rule 74
	'+'            reduce using rule 74
	'-'            reduce using rule 74
	'*'            reduce using rule 74
	'_'            reduce using rule 74
	'$'            reduce using rule 74
	CMP            reduce using rule 74
	UPPER_ID       reduce using rule 74
	LOWER_ID       reduce using rule 74
	rec            reduce using rule 74
	in             reduce using rule 74
	'|'            reduce using rule 74
	then           reduce using rule 74
	else           reduce using rule 74
	with           reduce using rule 74
	of             reduce using rule 74
	dualof         reduce using rule 74
	%eof           reduce using rule 74


State 24

	Type -> Skip .                                      (rule 63)

	nl             reduce using rule 63
	Int            reduce using rule 63
	Char           reduce using rule 63
	Bool           reduce using rule 63
	'()'           reduce using rule 63
	'->'           reduce using rule 63
	'-o'           reduce using rule 63
	Skip           reduce using rule 63
	'('            reduce using rule 63
	')'            reduce using rule 63
	','            reduce using rule 63
	']'            reduce using rule 63
	';'            reduce using rule 63
	'!'            reduce using rule 63
	'?'            reduce using rule 63
	'}'            reduce using rule 63
	'&&'           reduce using rule 63
	'||'           reduce using rule 63
	'/'            reduce using rule 63
	'&'            reduce using rule 63
	'+'            reduce using rule 63
	'-'            reduce using rule 63
	'*'            reduce using rule 63
	'_'            reduce using rule 63
	'$'            reduce using rule 63
	CMP            reduce using rule 63
	UPPER_ID       reduce using rule 63
	LOWER_ID       reduce using rule 63
	rec            reduce using rule 63
	in             reduce using rule 63
	'|'            reduce using rule 63
	then           reduce using rule 63
	else           reduce using rule 63
	with           reduce using rule 63
	of             reduce using rule 63
	dualof         reduce using rule 63
	%eof           reduce using rule 63


State 25

	Type -> '(' . TupleType ')'                         (rule 62)

	Int            shift, and enter state 20
	Char           shift, and enter state 21
	Bool           shift, and enter state 22
	'()'           shift, and enter state 23
	Skip           shift, and enter state 24
	'('            shift, and enter state 25
	'!'            shift, and enter state 26
	'?'            shift, and enter state 27
	'&'            shift, and enter state 28
	'+'            shift, and enter state 29
	UPPER_ID       shift, and enter state 30
	LOWER_ID       shift, and enter state 31
	rec            shift, and enter state 32
	dualof         shift, and enter state 34

	Type           goto state 99
	BasicType      goto state 14
	TupleType      goto state 100
	Polarity       goto state 15
	ChoiceView     goto state 16
	TypeVar        goto state 17
	TypeName       goto state 18

State 26

	Polarity -> '!' .                                   (rule 78)

	Int            reduce using rule 78
	Char           reduce using rule 78
	Bool           reduce using rule 78
	'()'           reduce using rule 78


State 27

	Polarity -> '?' .                                   (rule 77)

	Int            reduce using rule 77
	Char           reduce using rule 77
	Bool           reduce using rule 77
	'()'           reduce using rule 77


State 28

	ChoiceView -> '&' .                                 (rule 82)

	'{'            reduce using rule 82


State 29

	ChoiceView -> '+' .                                 (rule 81)

	'{'            reduce using rule 81


State 30

	TypeName -> UPPER_ID .                              (rule 103)

	nl             reduce using rule 103
	Int            reduce using rule 103
	Char           reduce using rule 103
	Bool           reduce using rule 103
	'()'           reduce using rule 103
	'->'           reduce using rule 103
	'-o'           reduce using rule 103
	Skip           reduce using rule 103
	'('            reduce using rule 103
	')'            reduce using rule 103
	','            reduce using rule 103
	']'            reduce using rule 103
	':'            reduce using rule 103
	';'            reduce using rule 103
	'!'            reduce using rule 103
	'?'            reduce using rule 103
	'}'            reduce using rule 103
	'&&'           reduce using rule 103
	'||'           reduce using rule 103
	'/'            reduce using rule 103
	'&'            reduce using rule 103
	'+'            reduce using rule 103
	'-'            reduce using rule 103
	'*'            reduce using rule 103
	'_'            reduce using rule 103
	'$'            reduce using rule 103
	CMP            reduce using rule 103
	UPPER_ID       reduce using rule 103
	LOWER_ID       reduce using rule 103
	rec            reduce using rule 103
	in             reduce using rule 103
	'='            reduce using rule 103
	'|'            reduce using rule 103
	then           reduce using rule 103
	else           reduce using rule 103
	with           reduce using rule 103
	of             reduce using rule 103
	dualof         reduce using rule 103
	%eof           reduce using rule 103


State 31

	TypeVar -> LOWER_ID .                               (rule 102)

	nl             reduce using rule 102
	Int            reduce using rule 102
	Char           reduce using rule 102
	Bool           reduce using rule 102
	'()'           reduce using rule 102
	'->'           reduce using rule 102
	'-o'           reduce using rule 102
	Skip           reduce using rule 102
	'('            reduce using rule 102
	')'            reduce using rule 102
	','            reduce using rule 102
	']'            reduce using rule 102
	':'            reduce using rule 102
	';'            reduce using rule 102
	'!'            reduce using rule 102
	'?'            reduce using rule 102
	'}'            reduce using rule 102
	'=>'           reduce using rule 102
	'&&'           reduce using rule 102
	'||'           reduce using rule 102
	'/'            reduce using rule 102
	'&'            reduce using rule 102
	'+'            reduce using rule 102
	'-'            reduce using rule 102
	'*'            reduce using rule 102
	'_'            reduce using rule 102
	'$'            reduce using rule 102
	'.'            reduce using rule 102
	CMP            reduce using rule 102
	UPPER_ID       reduce using rule 102
	LOWER_ID       reduce using rule 102
	rec            reduce using rule 102
	in             reduce using rule 102
	'='            reduce using rule 102
	'|'            reduce using rule 102
	then           reduce using rule 102
	else           reduce using rule 102
	with           reduce using rule 102
	of             reduce using rule 102
	dualof         reduce using rule 102
	%eof           reduce using rule 102


State 32

	Type -> rec . KindBind '.' Type                     (rule 67)

	LOWER_ID       shift, and enter state 31

	TypeVar        goto state 95
	KindBind       goto state 98

State 33

	TypeScheme -> forall . KindBindList '=>' Type       (rule 58)

	LOWER_ID       shift, and enter state 31

	TypeVar        goto state 95
	KindBind       goto state 96
	KindBindList   goto state 97

State 34

	Type -> dualof . Type                               (rule 69)

	Int            shift, and enter state 20
	Char           shift, and enter state 21
	Bool           shift, and enter state 22
	'()'           shift, and enter state 23
	Skip           shift, and enter state 24
	'('            shift, and enter state 25
	'!'            shift, and enter state 26
	'?'            shift, and enter state 27
	'&'            shift, and enter state 28
	'+'            shift, and enter state 29
	UPPER_ID       shift, and enter state 30
	LOWER_ID       shift, and enter state 31
	rec            shift, and enter state 32
	dualof         shift, and enter state 34

	Type           goto state 94
	BasicType      goto state 14
	Polarity       goto state 15
	ChoiceView     goto state 16
	TypeVar        goto state 17
	TypeName       goto state 18

State 35

	%start_expr -> Expr .                               (rule 4)
	Expr -> Expr . '$' Expr                             (rule 17)
	Expr -> Expr . ';' Expr                             (rule 19)
	Expr -> Expr . '||' Expr                            (rule 25)
	Expr -> Expr . '&&' Expr                            (rule 26)
	Expr -> Expr . CMP Expr                             (rule 27)
	Expr -> Expr . '+' Expr                             (rule 28)
	Expr -> Expr . '-' Expr                             (rule 29)
	Expr -> Expr . '*' Expr                             (rule 30)
	Expr -> Expr . '/' Expr                             (rule 31)

	';'            shift, and enter state 85
	'&&'           shift, and enter state 86
	'||'           shift, and enter state 87
	'/'            shift, and enter state 88
	'+'            shift, and enter state 89
	'-'            shift, and enter state 90
	'*'            shift, and enter state 91
	'$'            shift, and enter state 92
	CMP            shift, and enter state 93
	%eof           accept


State 36

	Expr -> App .                                       (rule 32)
	App -> App . Primary                                (rule 33)

	nl             reduce using rule 32
	'()'           shift, and enter state 41
	'('            shift, and enter state 42
	')'            reduce using rule 32
	','            reduce using rule 32
	';'            reduce using rule 32
	'}'            reduce using rule 32
	'&&'           reduce using rule 32
	'||'           reduce using rule 32
	'/'            reduce using rule 32
	'+'            reduce using rule 32
	'-'            reduce using rule 32
	'*'            reduce using rule 32
	'$'            reduce using rule 32
	CMP            reduce using rule 32
	UPPER_ID       shift, and enter state 44
	LOWER_ID       shift, and enter state 9
	INT            shift, and enter state 45
	BOOL           shift, and enter state 46
	CHAR           shift, and enter state 47
	in             reduce using rule 32
	then           reduce using rule 32
	else           reduce using rule 32
	with           reduce using rule 32
	of             reduce using rule 32
	%eof           reduce using rule 32

	Primary        goto state 84
	ArbitraryProgVargoto state 38
	ProgVar        goto state 39
	Constructor    goto state 40

State 37

	App -> Primary .                                    (rule 36)

	nl             reduce using rule 36
	'()'           reduce using rule 36
	'('            reduce using rule 36
	')'            reduce using rule 36
	','            reduce using rule 36
	';'            reduce using rule 36
	'}'            reduce using rule 36
	'&&'           reduce using rule 36
	'||'           reduce using rule 36
	'/'            reduce using rule 36
	'+'            reduce using rule 36
	'-'            reduce using rule 36
	'*'            reduce using rule 36
	'$'            reduce using rule 36
	CMP            reduce using rule 36
	UPPER_ID       reduce using rule 36
	LOWER_ID       reduce using rule 36
	INT            reduce using rule 36
	BOOL           reduce using rule 36
	CHAR           reduce using rule 36
	in             reduce using rule 36
	then           reduce using rule 36
	else           reduce using rule 36
	with           reduce using rule 36
	of             reduce using rule 36
	%eof           reduce using rule 36


State 38

	Primary -> ArbitraryProgVar .                       (rule 42)

	nl             reduce using rule 42
	'()'           reduce using rule 42
	'('            reduce using rule 42
	')'            reduce using rule 42
	','            reduce using rule 42
	';'            reduce using rule 42
	'}'            reduce using rule 42
	'&&'           reduce using rule 42
	'||'           reduce using rule 42
	'/'            reduce using rule 42
	'+'            reduce using rule 42
	'-'            reduce using rule 42
	'*'            reduce using rule 42
	'$'            reduce using rule 42
	CMP            reduce using rule 42
	UPPER_ID       reduce using rule 42
	LOWER_ID       reduce using rule 42
	INT            reduce using rule 42
	BOOL           reduce using rule 42
	CHAR           reduce using rule 42
	in             reduce using rule 42
	then           reduce using rule 42
	else           reduce using rule 42
	with           reduce using rule 42
	of             reduce using rule 42
	%eof           reduce using rule 42


State 39

	Primary -> ProgVar . '[' TypeList ']'               (rule 41)
	ArbitraryProgVar -> ProgVar .                       (rule 94)

	nl             reduce using rule 94
	'()'           reduce using rule 94
	'('            reduce using rule 94
	')'            reduce using rule 94
	','            reduce using rule 94
	'['            shift, and enter state 83
	';'            reduce using rule 94
	'}'            reduce using rule 94
	'&&'           reduce using rule 94
	'||'           reduce using rule 94
	'/'            reduce using rule 94
	'+'            reduce using rule 94
	'-'            reduce using rule 94
	'*'            reduce using rule 94
	'$'            reduce using rule 94
	CMP            reduce using rule 94
	UPPER_ID       reduce using rule 94
	LOWER_ID       reduce using rule 94
	INT            reduce using rule 94
	BOOL           reduce using rule 94
	CHAR           reduce using rule 94
	in             reduce using rule 94
	then           reduce using rule 94
	else           reduce using rule 94
	with           reduce using rule 94
	of             reduce using rule 94
	%eof           reduce using rule 94


State 40

	ArbitraryProgVar -> Constructor .                   (rule 95)

	nl             reduce using rule 95
	'()'           reduce using rule 95
	'('            reduce using rule 95
	')'            reduce using rule 95
	','            reduce using rule 95
	':'            reduce using rule 95
	';'            reduce using rule 95
	'}'            reduce using rule 95
	'&&'           reduce using rule 95
	'||'           reduce using rule 95
	'/'            reduce using rule 95
	'+'            reduce using rule 95
	'-'            reduce using rule 95
	'*'            reduce using rule 95
	'_'            reduce using rule 95
	'$'            reduce using rule 95
	CMP            reduce using rule 95
	UPPER_ID       reduce using rule 95
	LOWER_ID       reduce using rule 95
	INT            reduce using rule 95
	BOOL           reduce using rule 95
	CHAR           reduce using rule 95
	in             reduce using rule 95
	then           reduce using rule 95
	else           reduce using rule 95
	with           reduce using rule 95
	of             reduce using rule 95
	%eof           reduce using rule 95


State 41

	Primary -> '()' .                                   (rule 40)

	nl             reduce using rule 40
	'()'           reduce using rule 40
	'('            reduce using rule 40
	')'            reduce using rule 40
	','            reduce using rule 40
	';'            reduce using rule 40
	'}'            reduce using rule 40
	'&&'           reduce using rule 40
	'||'           reduce using rule 40
	'/'            reduce using rule 40
	'+'            reduce using rule 40
	'-'            reduce using rule 40
	'*'            reduce using rule 40
	'$'            reduce using rule 40
	CMP            reduce using rule 40
	UPPER_ID       reduce using rule 40
	LOWER_ID       reduce using rule 40
	INT            reduce using rule 40
	BOOL           reduce using rule 40
	CHAR           reduce using rule 40
	in             reduce using rule 40
	then           reduce using rule 40
	else           reduce using rule 40
	with           reduce using rule 40
	of             reduce using rule 40
	%eof           reduce using rule 40


State 42

	Primary -> '(' . lambda LambdaProgVarWildTBindList Arrow Expr ')'    (rule 43)
	Primary -> '(' . Tuple ')'                          (rule 44)

	'()'           shift, and enter state 41
	lambda         shift, and enter state 82
	'('            shift, and enter state 42
	'-'            shift, and enter state 43
	UPPER_ID       shift, and enter state 44
	LOWER_ID       shift, and enter state 9
	INT            shift, and enter state 45
	BOOL           shift, and enter state 46
	CHAR           shift, and enter state 47
	let            shift, and enter state 48
	if             shift, and enter state 49
	new            shift, and enter state 50
	select         shift, and enter state 51
	match          shift, and enter state 52
	case           shift, and enter state 53

	Expr           goto state 80
	App            goto state 36
	Primary        goto state 37
	Tuple          goto state 81
	ArbitraryProgVargoto state 38
	ProgVar        goto state 39
	Constructor    goto state 40

State 43

	App -> '-' . App                                    (rule 35)

	'()'           shift, and enter state 41
	'('            shift, and enter state 42
	'-'            shift, and enter state 43
	UPPER_ID       shift, and enter state 44
	LOWER_ID       shift, and enter state 9
	INT            shift, and enter state 45
	BOOL           shift, and enter state 46
	CHAR           shift, and enter state 47
	select         shift, and enter state 51

	App            goto state 79
	Primary        goto state 37
	ArbitraryProgVargoto state 38
	ProgVar        goto state 39
	Constructor    goto state 40

State 44

	Constructor -> UPPER_ID .                           (rule 97)

	nl             reduce using rule 97
	Int            reduce using rule 97
	Char           reduce using rule 97
	Bool           reduce using rule 97
	'()'           reduce using rule 97
	'->'           reduce using rule 97
	Skip           reduce using rule 97
	'('            reduce using rule 97
	')'            reduce using rule 97
	','            reduce using rule 97
	':'            reduce using rule 97
	';'            reduce using rule 97
	'!'            reduce using rule 97
	'?'            reduce using rule 97
	'}'            reduce using rule 97
	'&&'           reduce using rule 97
	'||'           reduce using rule 97
	'/'            reduce using rule 97
	'&'            reduce using rule 97
	'+'            reduce using rule 97
	'-'            reduce using rule 97
	'*'            reduce using rule 97
	'_'            reduce using rule 97
	'$'            reduce using rule 97
	CMP            reduce using rule 97
	UPPER_ID       reduce using rule 97
	LOWER_ID       reduce using rule 97
	rec            reduce using rule 97
	INT            reduce using rule 97
	BOOL           reduce using rule 97
	CHAR           reduce using rule 97
	in             reduce using rule 97
	'|'            reduce using rule 97
	then           reduce using rule 97
	else           reduce using rule 97
	with           reduce using rule 97
	of             reduce using rule 97
	dualof         reduce using rule 97
	%eof           reduce using rule 97


State 45

	Primary -> INT .                                    (rule 37)

	nl             reduce using rule 37
	'()'           reduce using rule 37
	'('            reduce using rule 37
	')'            reduce using rule 37
	','            reduce using rule 37
	';'            reduce using rule 37
	'}'            reduce using rule 37
	'&&'           reduce using rule 37
	'||'           reduce using rule 37
	'/'            reduce using rule 37
	'+'            reduce using rule 37
	'-'            reduce using rule 37
	'*'            reduce using rule 37
	'$'            reduce using rule 37
	CMP            reduce using rule 37
	UPPER_ID       reduce using rule 37
	LOWER_ID       reduce using rule 37
	INT            reduce using rule 37
	BOOL           reduce using rule 37
	CHAR           reduce using rule 37
	in             reduce using rule 37
	then           reduce using rule 37
	else           reduce using rule 37
	with           reduce using rule 37
	of             reduce using rule 37
	%eof           reduce using rule 37


State 46

	Primary -> BOOL .                                   (rule 38)

	nl             reduce using rule 38
	'()'           reduce using rule 38
	'('            reduce using rule 38
	')'            reduce using rule 38
	','            reduce using rule 38
	';'            reduce using rule 38
	'}'            reduce using rule 38
	'&&'           reduce using rule 38
	'||'           reduce using rule 38
	'/'            reduce using rule 38
	'+'            reduce using rule 38
	'-'            reduce using rule 38
	'*'            reduce using rule 38
	'$'            reduce using rule 38
	CMP            reduce using rule 38
	UPPER_ID       reduce using rule 38
	LOWER_ID       reduce using rule 38
	INT            reduce using rule 38
	BOOL           reduce using rule 38
	CHAR           reduce using rule 38
	in             reduce using rule 38
	then           reduce using rule 38
	else           reduce using rule 38
	with           reduce using rule 38
	of             reduce using rule 38
	%eof           reduce using rule 38


State 47

	Primary -> CHAR .                                   (rule 39)

	nl             reduce using rule 39
	'()'           reduce using rule 39
	'('            reduce using rule 39
	')'            reduce using rule 39
	','            reduce using rule 39
	';'            reduce using rule 39
	'}'            reduce using rule 39
	'&&'           reduce using rule 39
	'||'           reduce using rule 39
	'/'            reduce using rule 39
	'+'            reduce using rule 39
	'-'            reduce using rule 39
	'*'            reduce using rule 39
	'$'            reduce using rule 39
	CMP            reduce using rule 39
	UPPER_ID       reduce using rule 39
	LOWER_ID       reduce using rule 39
	INT            reduce using rule 39
	BOOL           reduce using rule 39
	CHAR           reduce using rule 39
	in             reduce using rule 39
	then           reduce using rule 39
	else           reduce using rule 39
	with           reduce using rule 39
	of             reduce using rule 39
	%eof           reduce using rule 39


State 48

	Expr -> let . ProgVarWild '=' Expr in Expr          (rule 18)
	Expr -> let . '(' ProgVarWildList ')' '=' Expr in Expr    (rule 20)

	'('            shift, and enter state 77
	'_'            shift, and enter state 78
	LOWER_ID       shift, and enter state 9

	ProgVar        goto state 75
	ProgVarWild    goto state 76

State 49

	Expr -> if . Expr then Expr else Expr               (rule 21)

	'()'           shift, and enter state 41
	'('            shift, and enter state 42
	'-'            shift, and enter state 43
	UPPER_ID       shift, and enter state 44
	LOWER_ID       shift, and enter state 9
	INT            shift, and enter state 45
	BOOL           shift, and enter state 46
	CHAR           shift, and enter state 47
	let            shift, and enter state 48
	if             shift, and enter state 49
	new            shift, and enter state 50
	select         shift, and enter state 51
	match          shift, and enter state 52
	case           shift, and enter state 53

	Expr           goto state 74
	App            goto state 36
	Primary        goto state 37
	ArbitraryProgVargoto state 38
	ProgVar        goto state 39
	Constructor    goto state 40

State 50

	Expr -> new . Type                                  (rule 22)

	Int            shift, and enter state 20
	Char           shift, and enter state 21
	Bool           shift, and enter state 22
	'()'           shift, and enter state 23
	Skip           shift, and enter state 24
	'('            shift, and enter state 25
	'!'            shift, and enter state 26
	'?'            shift, and enter state 27
	'&'            shift, and enter state 28
	'+'            shift, and enter state 29
	UPPER_ID       shift, and enter state 30
	LOWER_ID       shift, and enter state 31
	rec            shift, and enter state 32
	dualof         shift, and enter state 34

	Type           goto state 73
	BasicType      goto state 14
	Polarity       goto state 15
	ChoiceView     goto state 16
	TypeVar        goto state 17
	TypeName       goto state 18

State 51

	App -> select . ArbitraryProgVar                    (rule 34)

	UPPER_ID       shift, and enter state 44
	LOWER_ID       shift, and enter state 9

	ArbitraryProgVargoto state 71
	ProgVar        goto state 72
	Constructor    goto state 40

State 52

	Expr -> match . Expr with '{' MatchMap '}'          (rule 23)

	'()'           shift, and enter state 41
	'('            shift, and enter state 42
	'-'            shift, and enter state 43
	UPPER_ID       shift, and enter state 44
	LOWER_ID       shift, and enter state 9
	INT            shift, and enter state 45
	BOOL           shift, and enter state 46
	CHAR           shift, and enter state 47
	let            shift, and enter state 48
	if             shift, and enter state 49
	new            shift, and enter state 50
	select         shift, and enter state 51
	match          shift, and enter state 52
	case           shift, and enter state 53

	Expr           goto state 70
	App            goto state 36
	Primary        goto state 37
	ArbitraryProgVargoto state 38
	ProgVar        goto state 39
	Constructor    goto state 40

State 53

	Expr -> case . Expr of '{' CaseMap '}'              (rule 24)

	'()'           shift, and enter state 41
	'('            shift, and enter state 42
	'-'            shift, and enter state 43
	UPPER_ID       shift, and enter state 44
	LOWER_ID       shift, and enter state 9
	INT            shift, and enter state 45
	BOOL           shift, and enter state 46
	CHAR           shift, and enter state 47
	let            shift, and enter state 48
	if             shift, and enter state 49
	new            shift, and enter state 50
	select         shift, and enter state 51
	match          shift, and enter state 52
	case           shift, and enter state 53

	Expr           goto state 69
	App            goto state 36
	Primary        goto state 37
	ArbitraryProgVargoto state 38
	ProgVar        goto state 39
	Constructor    goto state 40

State 54

	%start_kinds -> Kind .                              (rule 3)

	%eof           accept


State 55

	Kind -> SU .                                        (rule 90)

	','            reduce using rule 90
	'=>'           reduce using rule 90
	'.'            reduce using rule 90
	LOWER_ID       reduce using rule 90
	'='            reduce using rule 90
	%eof           reduce using rule 90


State 56

	Kind -> SL .                                        (rule 91)

	','            reduce using rule 91
	'=>'           reduce using rule 91
	'.'            reduce using rule 91
	LOWER_ID       reduce using rule 91
	'='            reduce using rule 91
	%eof           reduce using rule 91


State 57

	Kind -> TU .                                        (rule 92)

	','            reduce using rule 92
	'=>'           reduce using rule 92
	'.'            reduce using rule 92
	LOWER_ID       reduce using rule 92
	'='            reduce using rule 92
	%eof           reduce using rule 92


State 58

	Kind -> TL .                                        (rule 93)

	','            reduce using rule 93
	'=>'           reduce using rule 93
	'.'            reduce using rule 93
	LOWER_ID       reduce using rule 93
	'='            reduce using rule 93
	%eof           reduce using rule 93


State 59

	%start_terms -> Prog .                              (rule 2)

	%eof           accept


State 60

	Prog -> Decl .                                      (rule 6)
	Prog -> Decl . NL Prog                              (rule 7)

	nl             shift, and enter state 68
	%eof           reduce using rule 6

	NL             goto state 67

State 61

	%start_typeScheme -> TypeScheme .                   (rule 1)

	%eof           accept


State 62

	%start_types -> Type .                              (rule 0)
	Type -> Type . Arrow Type                           (rule 61)
	Type -> Type . ';' Type                             (rule 64)

	'->'           shift, and enter state 64
	'-o'           shift, and enter state 65
	';'            shift, and enter state 66
	%eof           accept

	Arrow          goto state 63

State 63

	Type -> Type Arrow . Type                           (rule 61)

	Int            shift, and enter state 20
	Char           shift, and enter state 21
	Bool           shift, and enter state 22
	'()'           shift, and enter state 23
	Skip           shift, and enter state 24
	'('            shift, and enter state 25
	'!'            shift, and enter state 26
	'?'            shift, and enter state 27
	'&'            shift, and enter state 28
	'+'            shift, and enter state 29
	UPPER_ID       shift, and enter state 30
	LOWER_ID       shift, and enter state 31
	rec            shift, and enter state 32
	dualof         shift, and enter state 34

	Type           goto state 152
	BasicType      goto state 14
	Polarity       goto state 15
	ChoiceView     goto state 16
	TypeVar        goto state 17
	TypeName       goto state 18

State 64

	Arrow -> '->' .                                     (rule 79)

	Int            reduce using rule 79
	Char           reduce using rule 79
	Bool           reduce using rule 79
	'()'           reduce using rule 79
	Skip           reduce using rule 79
	'('            reduce using rule 79
	'!'            reduce using rule 79
	'?'            reduce using rule 79
	'&'            reduce using rule 79
	'+'            reduce using rule 79
	'-'            reduce using rule 79
	UPPER_ID       reduce using rule 79
	LOWER_ID       reduce using rule 79
	rec            reduce using rule 79
	INT            reduce using rule 79
	BOOL           reduce using rule 79
	CHAR           reduce using rule 79
	let            reduce using rule 79
	if             reduce using rule 79
	new            reduce using rule 79
	select         reduce using rule 79
	match          reduce using rule 79
	case           reduce using rule 79
	dualof         reduce using rule 79


State 65

	Arrow -> '-o' .                                     (rule 80)

	Int            reduce using rule 80
	Char           reduce using rule 80
	Bool           reduce using rule 80
	'()'           reduce using rule 80
	Skip           reduce using rule 80
	'('            reduce using rule 80
	'!'            reduce using rule 80
	'?'            reduce using rule 80
	'&'            reduce using rule 80
	'+'            reduce using rule 80
	'-'            reduce using rule 80
	UPPER_ID       reduce using rule 80
	LOWER_ID       reduce using rule 80
	rec            reduce using rule 80
	INT            reduce using rule 80
	BOOL           reduce using rule 80
	CHAR           reduce using rule 80
	let            reduce using rule 80
	if             reduce using rule 80
	new            reduce using rule 80
	select         reduce using rule 80
	match          reduce using rule 80
	case           reduce using rule 80
	dualof         reduce using rule 80


State 66

	Type -> Type ';' . Type                             (rule 64)

	Int            shift, and enter state 20
	Char           shift, and enter state 21
	Bool           shift, and enter state 22
	'()'           shift, and enter state 23
	Skip           shift, and enter state 24
	'('            shift, and enter state 25
	'!'            shift, and enter state 26
	'?'            shift, and enter state 27
	'&'            shift, and enter state 28
	'+'            shift, and enter state 29
	UPPER_ID       shift, and enter state 30
	LOWER_ID       shift, and enter state 31
	rec            shift, and enter state 32
	dualof         shift, and enter state 34

	Type           goto state 151
	BasicType      goto state 14
	Polarity       goto state 15
	ChoiceView     goto state 16
	TypeVar        goto state 17
	TypeName       goto state 18

State 67

	Prog -> Decl NL . Prog                              (rule 7)

	LOWER_ID       shift, and enter state 9
	data           shift, and enter state 10
	type           shift, and enter state 11

	Prog           goto state 150
	Decl           goto state 60
	ProgVar        goto state 8

State 68

	NL -> nl . NL                                       (rule 8)
	NL -> nl .                                          (rule 9)

	nl             shift, and enter state 68
	Int            reduce using rule 9
	Char           reduce using rule 9
	Bool           reduce using rule 9
	'()'           reduce using rule 9
	Skip           reduce using rule 9
	'('            reduce using rule 9
	'!'            reduce using rule 9
	'?'            reduce using rule 9
	'&'            reduce using rule 9
	'+'            reduce using rule 9
	UPPER_ID       reduce using rule 9
	LOWER_ID       reduce using rule 9
	rec            reduce using rule 9
	data           reduce using rule 9
	type           reduce using rule 9
	forall         reduce using rule 9
	dualof         reduce using rule 9

	NL             goto state 149

State 69

	Expr -> Expr . '$' Expr                             (rule 17)
	Expr -> Expr . ';' Expr                             (rule 19)
	Expr -> case Expr . of '{' CaseMap '}'              (rule 24)
	Expr -> Expr . '||' Expr                            (rule 25)
	Expr -> Expr . '&&' Expr                            (rule 26)
	Expr -> Expr . CMP Expr                             (rule 27)
	Expr -> Expr . '+' Expr                             (rule 28)
	Expr -> Expr . '-' Expr                             (rule 29)
	Expr -> Expr . '*' Expr                             (rule 30)
	Expr -> Expr . '/' Expr                             (rule 31)

	';'            shift, and enter state 85
	'&&'           shift, and enter state 86
	'||'           shift, and enter state 87
	'/'            shift, and enter state 88
	'+'            shift, and enter state 89
	'-'            shift, and enter state 90
	'*'            shift, and enter state 91
	'$'            shift, and enter state 92
	CMP            shift, and enter state 93
	of             shift, and enter state 148


State 70

	Expr -> Expr . '$' Expr                             (rule 17)
	Expr -> Expr . ';' Expr                             (rule 19)
	Expr -> match Expr . with '{' MatchMap '}'          (rule 23)
	Expr -> Expr . '||' Expr                            (rule 25)
	Expr -> Expr . '&&' Expr                            (rule 26)
	Expr -> Expr . CMP Expr                             (rule 27)
	Expr -> Expr . '+' Expr                             (rule 28)
	Expr -> Expr . '-' Expr                             (rule 29)
	Expr -> Expr . '*' Expr                             (rule 30)
	Expr -> Expr . '/' Expr                             (rule 31)

	';'            shift, and enter state 85
	'&&'           shift, and enter state 86
	'||'           shift, and enter state 87
	'/'            shift, and enter state 88
	'+'            shift, and enter state 89
	'-'            shift, and enter state 90
	'*'            shift, and enter state 91
	'$'            shift, and enter state 92
	CMP            shift, and enter state 93
	with           shift, and enter state 147


State 71

	App -> select ArbitraryProgVar .                    (rule 34)

	nl             reduce using rule 34
	'()'           reduce using rule 34
	'('            reduce using rule 34
	')'            reduce using rule 34
	','            reduce using rule 34
	';'            reduce using rule 34
	'}'            reduce using rule 34
	'&&'           reduce using rule 34
	'||'           reduce using rule 34
	'/'            reduce using rule 34
	'+'            reduce using rule 34
	'-'            reduce using rule 34
	'*'            reduce using rule 34
	'$'            reduce using rule 34
	CMP            reduce using rule 34
	UPPER_ID       reduce using rule 34
	LOWER_ID       reduce using rule 34
	INT            reduce using rule 34
	BOOL           reduce using rule 34
	CHAR           reduce using rule 34
	in             reduce using rule 34
	then           reduce using rule 34
	else           reduce using rule 34
	with           reduce using rule 34
	of             reduce using rule 34
	%eof           reduce using rule 34


State 72

	ArbitraryProgVar -> ProgVar .                       (rule 94)

	nl             reduce using rule 94
	'()'           reduce using rule 94
	'('            reduce using rule 94
	')'            reduce using rule 94
	','            reduce using rule 94
	':'            reduce using rule 94
	';'            reduce using rule 94
	'}'            reduce using rule 94
	'&&'           reduce using rule 94
	'||'           reduce using rule 94
	'/'            reduce using rule 94
	'+'            reduce using rule 94
	'-'            reduce using rule 94
	'*'            reduce using rule 94
	'_'            reduce using rule 94
	'$'            reduce using rule 94
	CMP            reduce using rule 94
	UPPER_ID       reduce using rule 94
	LOWER_ID       reduce using rule 94
	INT            reduce using rule 94
	BOOL           reduce using rule 94
	CHAR           reduce using rule 94
	in             reduce using rule 94
	then           reduce using rule 94
	else           reduce using rule 94
	with           reduce using rule 94
	of             reduce using rule 94
	%eof           reduce using rule 94


State 73

	Expr -> new Type .                                  (rule 22)
	Type -> Type . Arrow Type                           (rule 61)
	Type -> Type . ';' Type                             (rule 64)

	nl             reduce using rule 22
	'->'           shift, and enter state 64
	'-o'           shift, and enter state 65
	')'            reduce using rule 22
	','            reduce using rule 22
	';'            shift, and enter state 66
	'}'            reduce using rule 22
	'&&'           reduce using rule 22
	'||'           reduce using rule 22
	'/'            reduce using rule 22
	'+'            reduce using rule 22
	'-'            reduce using rule 22
	'*'            reduce using rule 22
	'$'            reduce using rule 22
	CMP            reduce using rule 22
	in             reduce using rule 22
	then           reduce using rule 22
	else           reduce using rule 22
	with           reduce using rule 22
	of             reduce using rule 22
	%eof           reduce using rule 22

	Arrow          goto state 63

State 74

	Expr -> Expr . '$' Expr                             (rule 17)
	Expr -> Expr . ';' Expr                             (rule 19)
	Expr -> if Expr . then Expr else Expr               (rule 21)
	Expr -> Expr . '||' Expr                            (rule 25)
	Expr -> Expr . '&&' Expr                            (rule 26)
	Expr -> Expr . CMP Expr                             (rule 27)
	Expr -> Expr . '+' Expr                             (rule 28)
	Expr -> Expr . '-' Expr                             (rule 29)
	Expr -> Expr . '*' Expr                             (rule 30)
	Expr -> Expr . '/' Expr                             (rule 31)

	';'            shift, and enter state 85
	'&&'           shift, and enter state 86
	'||'           shift, and enter state 87
	'/'            shift, and enter state 88
	'+'            shift, and enter state 89
	'-'            shift, and enter state 90
	'*'            shift, and enter state 91
	'$'            shift, and enter state 92
	CMP            shift, and enter state 93
	then           shift, and enter state 146


State 75

	ProgVarWild -> ProgVar .                            (rule 98)

	'->'           reduce using rule 98
	')'            reduce using rule 98
	','            reduce using rule 98
	':'            reduce using rule 98
	'_'            reduce using rule 98
	LOWER_ID       reduce using rule 98
	'='            reduce using rule 98


State 76

	Expr -> let ProgVarWild . '=' Expr in Expr          (rule 18)

	'='            shift, and enter state 145


State 77

	Expr -> let '(' . ProgVarWildList ')' '=' Expr in Expr    (rule 20)

	'_'            shift, and enter state 78
	LOWER_ID       shift, and enter state 9

	ProgVarWildListgoto state 143
	ProgVar        goto state 75
	ProgVarWild    goto state 144

State 78

	ProgVarWild -> '_' .                                (rule 99)

	'->'           reduce using rule 99
	')'            reduce using rule 99
	','            reduce using rule 99
	':'            reduce using rule 99
	'_'            reduce using rule 99
	LOWER_ID       reduce using rule 99
	'='            reduce using rule 99


State 79

	App -> App . Primary                                (rule 33)
	App -> '-' App .                                    (rule 35)

	nl             reduce using rule 35
	'()'           reduce using rule 35
	'('            reduce using rule 35
	')'            reduce using rule 35
	','            reduce using rule 35
	';'            reduce using rule 35
	'}'            reduce using rule 35
	'&&'           reduce using rule 35
	'||'           reduce using rule 35
	'/'            reduce using rule 35
	'+'            reduce using rule 35
	'-'            reduce using rule 35
	'*'            reduce using rule 35
	'$'            reduce using rule 35
	CMP            reduce using rule 35
	UPPER_ID       reduce using rule 35
	LOWER_ID       reduce using rule 35
	INT            shift, and enter state 45
			(reduce using rule 35)

	BOOL           shift, and enter state 46
			(reduce using rule 35)

	CHAR           shift, and enter state 47
			(reduce using rule 35)

	in             reduce using rule 35
	then           reduce using rule 35
	else           reduce using rule 35
	with           reduce using rule 35
	of             reduce using rule 35
	%eof           reduce using rule 35

	Primary        goto state 84
	ArbitraryProgVargoto state 38
	ProgVar        goto state 39
	Constructor    goto state 40

State 80

	Expr -> Expr . '$' Expr                             (rule 17)
	Expr -> Expr . ';' Expr                             (rule 19)
	Expr -> Expr . '||' Expr                            (rule 25)
	Expr -> Expr . '&&' Expr                            (rule 26)
	Expr -> Expr . CMP Expr                             (rule 27)
	Expr -> Expr . '+' Expr                             (rule 28)
	Expr -> Expr . '-' Expr                             (rule 29)
	Expr -> Expr . '*' Expr                             (rule 30)
	Expr -> Expr . '/' Expr                             (rule 31)
	Tuple -> Expr .                                     (rule 50)
	Tuple -> Expr . ',' Tuple                           (rule 51)

	')'            reduce using rule 50
	','            shift, and enter state 142
	';'            shift, and enter state 85
	'&&'           shift, and enter state 86
	'||'           shift, and enter state 87
	'/'            shift, and enter state 88
	'+'            shift, and enter state 89
	'-'            shift, and enter state 90
	'*'            shift, and enter state 91
	'$'            shift, and enter state 92
	CMP            shift, and enter state 93


State 81

	Primary -> '(' Tuple . ')'                          (rule 44)

	')'            shift, and enter state 141


State 82

	Primary -> '(' lambda . LambdaProgVarWildTBindList Arrow Expr ')'    (rule 43)

	'_'            shift, and enter state 78
	LOWER_ID       shift, and enter state 9

	ProgVarWildTBindgoto state 138
	LambdaProgVarWildTBindListgoto state 139
	ProgVar        goto state 75
	ProgVarWild    goto state 140

State 83

	Primary -> ProgVar '[' . TypeList ']'               (rule 41)

	Int            shift, and enter state 20
	Char           shift, and enter state 21
	Bool           shift, and enter state 22
	'()'           shift, and enter state 23
	Skip           shift, and enter state 24
	'('            shift, and enter state 25
	'!'            shift, and enter state 26
	'?'            shift, and enter state 27
	'&'            shift, and enter state 28
	'+'            shift, and enter state 29
	UPPER_ID       shift, and enter state 30
	LOWER_ID       shift, and enter state 31
	rec            shift, and enter state 32
	dualof         shift, and enter state 34

	Type           goto state 136
	BasicType      goto state 14
	Polarity       goto state 15
	ChoiceView     goto state 16
	TypeList       goto state 137
	TypeVar        goto state 17
	TypeName       goto state 18

State 84

	App -> App Primary .                                (rule 33)

	nl             reduce using rule 33
	'()'           reduce using rule 33
	'('            reduce using rule 33
	')'            reduce using rule 33
	','            reduce using rule 33
	';'            reduce using rule 33
	'}'            reduce using rule 33
	'&&'           reduce using rule 33
	'||'           reduce using rule 33
	'/'            reduce using rule 33
	'+'            reduce using rule 33
	'-'            reduce using rule 33
	'*'            reduce using rule 33
	'$'            reduce using rule 33
	CMP            reduce using rule 33
	UPPER_ID       reduce using rule 33
	LOWER_ID       reduce using rule 33
	INT            reduce using rule 33
	BOOL           reduce using rule 33
	CHAR           reduce using rule 33
	in             reduce using rule 33
	then           reduce using rule 33
	else           reduce using rule 33
	with           reduce using rule 33
	of             reduce using rule 33
	%eof           reduce using rule 33


State 85

	Expr -> Expr ';' . Expr                             (rule 19)

	'()'           shift, and enter state 41
	'('            shift, and enter state 42
	'-'            shift, and enter state 43
	UPPER_ID       shift, and enter state 44
	LOWER_ID       shift, and enter state 9
	INT            shift, and enter state 45
	BOOL           shift, and enter state 46
	CHAR           shift, and enter state 47
	let            shift, and enter state 48
	if             shift, and enter state 49
	new            shift, and enter state 50
	select         shift, and enter state 51
	match          shift, and enter state 52
	case           shift, and enter state 53

	Expr           goto state 135
	App            goto state 36
	Primary        goto state 37
	ArbitraryProgVargoto state 38
	ProgVar        goto state 39
	Constructor    goto state 40

State 86

	Expr -> Expr '&&' . Expr                            (rule 26)

	'()'           shift, and enter state 41
	'('            shift, and enter state 42
	'-'            shift, and enter state 43
	UPPER_ID       shift, and enter state 44
	LOWER_ID       shift, and enter state 9
	INT            shift, and enter state 45
	BOOL           shift, and enter state 46
	CHAR           shift, and enter state 47
	let            shift, and enter state 48
	if             shift, and enter state 49
	new            shift, and enter state 50
	select         shift, and enter state 51
	match          shift, and enter state 52
	case           shift, and enter state 53

	Expr           goto state 134
	App            goto state 36
	Primary        goto state 37
	ArbitraryProgVargoto state 38
	ProgVar        goto state 39
	Constructor    goto state 40

State 87

	Expr -> Expr '||' . Expr                            (rule 25)

	'()'           shift, and enter state 41
	'('            shift, and enter state 42
	'-'            shift, and enter state 43
	UPPER_ID       shift, and enter state 44
	LOWER_ID       shift, and enter state 9
	INT            shift, and enter state 45
	BOOL           shift, and enter state 46
	CHAR           shift, and enter state 47
	let            shift, and enter state 48
	if             shift, and enter state 49
	new            shift, and enter state 50
	select         shift, and enter state 51
	match          shift, and enter state 52
	case           shift, and enter state 53

	Expr           goto state 133
	App            goto state 36
	Primary        goto state 37
	ArbitraryProgVargoto state 38
	ProgVar        goto state 39
	Constructor    goto state 40

State 88

	Expr -> Expr '/' . Expr                             (rule 31)

	'()'           shift, and enter state 41
	'('            shift, and enter state 42
	'-'            shift, and enter state 43
	UPPER_ID       shift, and enter state 44
	LOWER_ID       shift, and enter state 9
	INT            shift, and enter state 45
	BOOL           shift, and enter state 46
	CHAR           shift, and enter state 47
	let            shift, and enter state 48
	if             shift, and enter state 49
	new            shift, and enter state 50
	select         shift, and enter state 51
	match          shift, and enter state 52
	case           shift, and enter state 53

	Expr           goto state 132
	App            goto state 36
	Primary        goto state 37
	ArbitraryProgVargoto state 38
	ProgVar        goto state 39
	Constructor    goto state 40

State 89

	Expr -> Expr '+' . Expr                             (rule 28)

	'()'           shift, and enter state 41
	'('            shift, and enter state 42
	'-'            shift, and enter state 43
	UPPER_ID       shift, and enter state 44
	LOWER_ID       shift, and enter state 9
	INT            shift, and enter state 45
	BOOL           shift, and enter state 46
	CHAR           shift, and enter state 47
	let            shift, and enter state 48
	if             shift, and enter state 49
	new            shift, and enter state 50
	select         shift, and enter state 51
	match          shift, and enter state 52
	case           shift, and enter state 53

	Expr           goto state 131
	App            goto state 36
	Primary        goto state 37
	ArbitraryProgVargoto state 38
	ProgVar        goto state 39
	Constructor    goto state 40

State 90

	Expr -> Expr '-' . Expr                             (rule 29)

	'()'           shift, and enter state 41
	'('            shift, and enter state 42
	'-'            shift, and enter state 43
	UPPER_ID       shift, and enter state 44
	LOWER_ID       shift, and enter state 9
	INT            shift, and enter state 45
	BOOL           shift, and enter state 46
	CHAR           shift, and enter state 47
	let            shift, and enter state 48
	if             shift, and enter state 49
	new            shift, and enter state 50
	select         shift, and enter state 51
	match          shift, and enter state 52
	case           shift, and enter state 53

	Expr           goto state 130
	App            goto state 36
	Primary        goto state 37
	ArbitraryProgVargoto state 38
	ProgVar        goto state 39
	Constructor    goto state 40

State 91

	Expr -> Expr '*' . Expr                             (rule 30)

	'()'           shift, and enter state 41
	'('            shift, and enter state 42
	'-'            shift, and enter state 43
	UPPER_ID       shift, and enter state 44
	LOWER_ID       shift, and enter state 9
	INT            shift, and enter state 45
	BOOL           shift, and enter state 46
	CHAR           shift, and enter state 47
	let            shift, and enter state 48
	if             shift, and enter state 49
	new            shift, and enter state 50
	select         shift, and enter state 51
	match          shift, and enter state 52
	case           shift, and enter state 53

	Expr           goto state 129
	App            goto state 36
	Primary        goto state 37
	ArbitraryProgVargoto state 38
	ProgVar        goto state 39
	Constructor    goto state 40

State 92

	Expr -> Expr '$' . Expr                             (rule 17)

	'()'           shift, and enter state 41
	'('            shift, and enter state 42
	'-'            shift, and enter state 43
	UPPER_ID       shift, and enter state 44
	LOWER_ID       shift, and enter state 9
	INT            shift, and enter state 45
	BOOL           shift, and enter state 46
	CHAR           shift, and enter state 47
	let            shift, and enter state 48
	if             shift, and enter state 49
	new            shift, and enter state 50
	select         shift, and enter state 51
	match          shift, and enter state 52
	case           shift, and enter state 53

	Expr           goto state 128
	App            goto state 36
	Primary        goto state 37
	ArbitraryProgVargoto state 38
	ProgVar        goto state 39
	Constructor    goto state 40

State 93

	Expr -> Expr CMP . Expr                             (rule 27)

	'()'           shift, and enter state 41
	'('            shift, and enter state 42
	'-'            shift, and enter state 43
	UPPER_ID       shift, and enter state 44
	LOWER_ID       shift, and enter state 9
	INT            shift, and enter state 45
	BOOL           shift, and enter state 46
	CHAR           shift, and enter state 47
	let            shift, and enter state 48
	if             shift, and enter state 49
	new            shift, and enter state 50
	select         shift, and enter state 51
	match          shift, and enter state 52
	case           shift, and enter state 53

	Expr           goto state 127
	App            goto state 36
	Primary        goto state 37
	ArbitraryProgVargoto state 38
	ProgVar        goto state 39
	Constructor    goto state 40

State 94

	Type -> Type . Arrow Type                           (rule 61)
	Type -> Type . ';' Type                             (rule 64)
	Type -> dualof Type .                               (rule 69)

	nl             reduce using rule 69
	Int            reduce using rule 69
	Char           reduce using rule 69
	Bool           reduce using rule 69
	'()'           reduce using rule 69
	'->'           reduce using rule 69
	'-o'           reduce using rule 69
	Skip           reduce using rule 69
	'('            reduce using rule 69
	')'            reduce using rule 69
	','            reduce using rule 69
	']'            reduce using rule 69
	';'            reduce using rule 69
	'!'            reduce using rule 69
	'?'            reduce using rule 69
	'}'            reduce using rule 69
	'&&'           reduce using rule 69
	'||'           reduce using rule 69
	'/'            reduce using rule 69
	'&'            reduce using rule 69
	'+'            reduce using rule 69
	'-'            reduce using rule 69
	'*'            reduce using rule 69
	'_'            reduce using rule 69
	'$'            reduce using rule 69
	CMP            reduce using rule 69
	UPPER_ID       reduce using rule 69
	LOWER_ID       reduce using rule 69
	rec            reduce using rule 69
	in             reduce using rule 69
	'|'            reduce using rule 69
	then           reduce using rule 69
	else           reduce using rule 69
	with           reduce using rule 69
	of             reduce using rule 69
	dualof         reduce using rule 69
	%eof           reduce using rule 69

	Arrow          goto state 63

State 95

	KindBind -> TypeVar . ':' Kind                      (rule 104)
	KindBind -> TypeVar .                               (rule 105)

	','            reduce using rule 105
	':'            shift, and enter state 126
	'=>'           reduce using rule 105
	'.'            reduce using rule 105
	'='            reduce using rule 105


State 96

	KindBindList -> KindBind .                          (rule 108)
	KindBindList -> KindBind . ',' KindBindList         (rule 109)

	','            shift, and enter state 125
	'=>'           reduce using rule 108
	'='            reduce using rule 108


State 97

	TypeScheme -> forall KindBindList . '=>' Type       (rule 58)

	'=>'           shift, and enter state 124


State 98

	Type -> rec KindBind . '.' Type                     (rule 67)

	'.'            shift, and enter state 123


State 99

	Type -> Type . Arrow Type                           (rule 61)
	Type -> Type . ';' Type                             (rule 64)
	TupleType -> Type .                                 (rule 75)
	TupleType -> Type . ',' TupleType                   (rule 76)

	'->'           shift, and enter state 64
	'-o'           shift, and enter state 65
	')'            reduce using rule 75
	','            shift, and enter state 122
	';'            shift, and enter state 66

	Arrow          goto state 63

State 100

	Type -> '(' TupleType . ')'                         (rule 62)

	')'            shift, and enter state 121


State 101

	Type -> ChoiceView '{' . FieldList '}'              (rule 66)

	UPPER_ID       shift, and enter state 44
	LOWER_ID       shift, and enter state 9

	FieldList      goto state 118
	Field          goto state 119
	ArbitraryProgVargoto state 120
	ProgVar        goto state 72
	Constructor    goto state 40

State 102

	Type -> Polarity BasicType .                        (rule 65)

	nl             reduce using rule 65
	Int            reduce using rule 65
	Char           reduce using rule 65
	Bool           reduce using rule 65
	'()'           reduce using rule 65
	'->'           reduce using rule 65
	'-o'           reduce using rule 65
	Skip           reduce using rule 65
	'('            reduce using rule 65
	')'            reduce using rule 65
	','            reduce using rule 65
	']'            reduce using rule 65
	';'            reduce using rule 65
	'!'            reduce using rule 65
	'?'            reduce using rule 65
	'}'            reduce using rule 65
	'&&'           reduce using rule 65
	'||'           reduce using rule 65
	'/'            reduce using rule 65
	'&'            reduce using rule 65
	'+'            reduce using rule 65
	'-'            reduce using rule 65
	'*'            reduce using rule 65
	'_'            reduce using rule 65
	'$'            reduce using rule 65
	CMP            reduce using rule 65
	UPPER_ID       reduce using rule 65
	LOWER_ID       reduce using rule 65
	rec            reduce using rule 65
	in             reduce using rule 65
	'|'            reduce using rule 65
	then           reduce using rule 65
	else           reduce using rule 65
	with           reduce using rule 65
	of             reduce using rule 65
	dualof         reduce using rule 65
	%eof           reduce using rule 65


State 103

	Schemes -> TypeScheme NL . TypeScheme               (rule 112)

	Int            shift, and enter state 20
	Char           shift, and enter state 21
	Bool           shift, and enter state 22
	'()'           shift, and enter state 23
	Skip           shift, and enter state 24
	'('            shift, and enter state 25
	'!'            shift, and enter state 26
	'?'            shift, and enter state 27
	'&'            shift, and enter state 28
	'+'            shift, and enter state 29
	UPPER_ID       shift, and enter state 30
	LOWER_ID       shift, and enter state 31
	rec            shift, and enter state 32
	forall         shift, and enter state 33
	dualof         shift, and enter state 34

	TypeScheme     goto state 117
	Type           goto state 13
	BasicType      goto state 14
	Polarity       goto state 15
	ChoiceView     goto state 16
	TypeVar        goto state 17
	TypeName       goto state 18

State 104

	TypeNameKind -> TypeName . ':' Kind                 (rule 106)
	TypeNameKind -> TypeName .                          (rule 107)

	':'            shift, and enter state 116
	LOWER_ID       reduce using rule 107
	'='            reduce using rule 107


State 105

	Decl -> type TypeNameKind . KindBindEmptyList '=' Type    (rule 12)

	LOWER_ID       shift, and enter state 31
	'='            reduce using rule 110

	TypeVar        goto state 95
	KindBind       goto state 96
	KindBindList   goto state 113
	KindBindEmptyListgoto state 115

State 106

	Decl -> data TypeNameKind . KindBindEmptyList '=' DataCons    (rule 13)

	LOWER_ID       shift, and enter state 31
	'='            reduce using rule 110

	TypeVar        goto state 95
	KindBind       goto state 96
	KindBindList   goto state 113
	KindBindEmptyListgoto state 114

State 107

	ProgVarWildSeq -> ProgVarWild . ProgVarWildSeq      (rule 101)

	'->'           reduce using rule 100
	'_'            shift, and enter state 78
	LOWER_ID       shift, and enter state 9
	'='            reduce using rule 100

	ProgVar        goto state 75
	ProgVarWild    goto state 107
	ProgVarWildSeq goto state 112

State 108

	Decl -> ProgVar ProgVarWildSeq . '=' Expr           (rule 11)

	'='            shift, and enter state 111


State 109

	Decl -> ProgVar ':' . TypeScheme                    (rule 10)

	Int            shift, and enter state 20
	Char           shift, and enter state 21
	Bool           shift, and enter state 22
	'()'           shift, and enter state 23
	Skip           shift, and enter state 24
	'('            shift, and enter state 25
	'!'            shift, and enter state 26
	'?'            shift, and enter state 27
	'&'            shift, and enter state 28
	'+'            shift, and enter state 29
	UPPER_ID       shift, and enter state 30
	LOWER_ID       shift, and enter state 31
	rec            shift, and enter state 32
	forall         shift, and enter state 33
	dualof         shift, and enter state 34

	TypeScheme     goto state 110
	Type           goto state 13
	BasicType      goto state 14
	Polarity       goto state 15
	ChoiceView     goto state 16
	TypeVar        goto state 17
	TypeName       goto state 18

State 110

	Decl -> ProgVar ':' TypeScheme .                    (rule 10)

	nl             reduce using rule 10
	%eof           reduce using rule 10


State 111

	Decl -> ProgVar ProgVarWildSeq '=' . Expr           (rule 11)

	'()'           shift, and enter state 41
	'('            shift, and enter state 42
	'-'            shift, and enter state 43
	UPPER_ID       shift, and enter state 44
	LOWER_ID       shift, and enter state 9
	INT            shift, and enter state 45
	BOOL           shift, and enter state 46
	CHAR           shift, and enter state 47
	let            shift, and enter state 48
	if             shift, and enter state 49
	new            shift, and enter state 50
	select         shift, and enter state 51
	match          shift, and enter state 52
	case           shift, and enter state 53

	Expr           goto state 176
	App            goto state 36
	Primary        goto state 37
	ArbitraryProgVargoto state 38
	ProgVar        goto state 39
	Constructor    goto state 40

State 112

	ProgVarWildSeq -> ProgVarWild ProgVarWildSeq .      (rule 101)

	'->'           reduce using rule 101
	'='            reduce using rule 101


State 113

	KindBindEmptyList -> KindBindList .                 (rule 111)

	'='            reduce using rule 111


State 114

	Decl -> data TypeNameKind KindBindEmptyList . '=' DataCons    (rule 13)

	'='            shift, and enter state 175


State 115

	Decl -> type TypeNameKind KindBindEmptyList . '=' Type    (rule 12)

	'='            shift, and enter state 174


State 116

	TypeNameKind -> TypeName ':' . Kind                 (rule 106)

	SU             shift, and enter state 55
	SL             shift, and enter state 56
	TU             shift, and enter state 57
	TL             shift, and enter state 58

	Kind           goto state 173

State 117

	Schemes -> TypeScheme NL TypeScheme .               (rule 112)

	%eof           reduce using rule 112


State 118

	Type -> ChoiceView '{' FieldList . '}'              (rule 66)

	'}'            shift, and enter state 172


State 119

	FieldList -> Field .                                (rule 83)
	FieldList -> Field . ',' FieldList                  (rule 84)

	','            shift, and enter state 171
	'}'            reduce using rule 83


State 120

	Field -> ArbitraryProgVar . ':' Type                (rule 85)

	':'            shift, and enter state 170


State 121

	Type -> '(' TupleType ')' .                         (rule 62)

	nl             reduce using rule 62
	Int            reduce using rule 62
	Char           reduce using rule 62
	Bool           reduce using rule 62
	'()'           reduce using rule 62
	'->'           reduce using rule 62
	'-o'           reduce using rule 62
	Skip           reduce using rule 62
	'('            reduce using rule 62
	')'            reduce using rule 62
	','            reduce using rule 62
	']'            reduce using rule 62
	';'            reduce using rule 62
	'!'            reduce using rule 62
	'?'            reduce using rule 62
	'}'            reduce using rule 62
	'&&'           reduce using rule 62
	'||'           reduce using rule 62
	'/'            reduce using rule 62
	'&'            reduce using rule 62
	'+'            reduce using rule 62
	'-'            reduce using rule 62
	'*'            reduce using rule 62
	'_'            reduce using rule 62
	'$'            reduce using rule 62
	CMP            reduce using rule 62
	UPPER_ID       reduce using rule 62
	LOWER_ID       reduce using rule 62
	rec            reduce using rule 62
	in             reduce using rule 62
	'|'            reduce using rule 62
	then           reduce using rule 62
	else           reduce using rule 62
	with           reduce using rule 62
	of             reduce using rule 62
	dualof         reduce using rule 62
	%eof           reduce using rule 62


State 122

	TupleType -> Type ',' . TupleType                   (rule 76)

	Int            shift, and enter state 20
	Char           shift, and enter state 21
	Bool           shift, and enter state 22
	'()'           shift, and enter state 23
	Skip           shift, and enter state 24
	'('            shift, and enter state 25
	'!'            shift, and enter state 26
	'?'            shift, and enter state 27
	'&'            shift, and enter state 28
	'+'            shift, and enter state 29
	UPPER_ID       shift, and enter state 30
	LOWER_ID       shift, and enter state 31
	rec            shift, and enter state 32
	dualof         shift, and enter state 34

	Type           goto state 99
	BasicType      goto state 14
	TupleType      goto state 169
	Polarity       goto state 15
	ChoiceView     goto state 16
	TypeVar        goto state 17
	TypeName       goto state 18

State 123

	Type -> rec KindBind '.' . Type                     (rule 67)

	Int            shift, and enter state 20
	Char           shift, and enter state 21
	Bool           shift, and enter state 22
	'()'           shift, and enter state 23
	Skip           shift, and enter state 24
	'('            shift, and enter state 25
	'!'            shift, and enter state 26
	'?'            shift, and enter state 27
	'&'            shift, and enter state 28
	'+'            shift, and enter state 29
	UPPER_ID       shift, and enter state 30
	LOWER_ID       shift, and enter state 31
	rec            shift, and enter state 32
	dualof         shift, and enter state 34

	Type           goto state 168
	BasicType      goto state 14
	Polarity       goto state 15
	ChoiceView     goto state 16
	TypeVar        goto state 17
	TypeName       goto state 18

State 124

	TypeScheme -> forall KindBindList '=>' . Type       (rule 58)

	Int            shift, and enter state 20
	Char           shift, and enter state 21
	Bool           shift, and enter state 22
	'()'           shift, and enter state 23
	Skip           shift, and enter state 24
	'('            shift, and enter state 25
	'!'            shift, and enter state 26
	'?'            shift, and enter state 27
	'&'            shift, and enter state 28
	'+'            shift, and enter state 29
	UPPER_ID       shift, and enter state 30
	LOWER_ID       shift, and enter state 31
	rec            shift, and enter state 32
	dualof         shift, and enter state 34

	Type           goto state 167
	BasicType      goto state 14
	Polarity       goto state 15
	ChoiceView     goto state 16
	TypeVar        goto state 17
	TypeName       goto state 18

State 125

	KindBindList -> KindBind ',' . KindBindList         (rule 109)

	LOWER_ID       shift, and enter state 31

	TypeVar        goto state 95
	KindBind       goto state 96
	KindBindList   goto state 166

State 126

	KindBind -> TypeVar ':' . Kind                      (rule 104)

	SU             shift, and enter state 55
	SL             shift, and enter state 56
	TU             shift, and enter state 57
	TL             shift, and enter state 58

	Kind           goto state 165

State 127

	Expr -> Expr . '$' Expr                             (rule 17)
	Expr -> Expr . ';' Expr                             (rule 19)
	Expr -> Expr . '||' Expr                            (rule 25)
	Expr -> Expr . '&&' Expr                            (rule 26)
	Expr -> Expr . CMP Expr                             (rule 27)
	Expr -> Expr CMP Expr .                             (rule 27)
	Expr -> Expr . '+' Expr                             (rule 28)
	Expr -> Expr . '-' Expr                             (rule 29)
	Expr -> Expr . '*' Expr                             (rule 30)
	Expr -> Expr . '/' Expr                             (rule 31)

	nl             reduce using rule 27
	')'            reduce using rule 27
	','            reduce using rule 27
	';'            shift, and enter state 85
	'}'            reduce using rule 27
	'&&'           reduce using rule 27
	'||'           reduce using rule 27
	'/'            shift, and enter state 88
	'+'            shift, and enter state 89
	'-'            shift, and enter state 90
	'*'            shift, and enter state 91
	'$'            reduce using rule 27
	CMP            fail
	in             reduce using rule 27
	then           reduce using rule 27
	else           reduce using rule 27
	with           reduce using rule 27
	of             reduce using rule 27
	%eof           reduce using rule 27


State 128

	Expr -> Expr . '$' Expr                             (rule 17)
	Expr -> Expr '$' Expr .                             (rule 17)
	Expr -> Expr . ';' Expr                             (rule 19)
	Expr -> Expr . '||' Expr                            (rule 25)
	Expr -> Expr . '&&' Expr                            (rule 26)
	Expr -> Expr . CMP Expr                             (rule 27)
	Expr -> Expr . '+' Expr                             (rule 28)
	Expr -> Expr . '-' Expr                             (rule 29)
	Expr -> Expr . '*' Expr                             (rule 30)
	Expr -> Expr . '/' Expr                             (rule 31)

	nl             reduce using rule 17
	')'            reduce using rule 17
	','            reduce using rule 17
	';'            shift, and enter state 85
	'}'            reduce using rule 17
	'&&'           shift, and enter state 86
	'||'           shift, and enter state 87
	'/'            shift, and enter state 88
	'+'            shift, and enter state 89
	'-'            shift, and enter state 90
	'*'            shift, and enter state 91
	'$'            shift, and enter state 92
	CMP            shift, and enter state 93
	in             reduce using rule 17
	then           reduce using rule 17
	else           reduce using rule 17
	with           reduce using rule 17
	of             reduce using rule 17
	%eof           reduce using rule 17


State 129

	Expr -> Expr . '$' Expr                             (rule 17)
	Expr -> Expr . ';' Expr                             (rule 19)
	Expr -> Expr . '||' Expr                            (rule 25)
	Expr -> Expr . '&&' Expr                            (rule 26)
	Expr -> Expr . CMP Expr                             (rule 27)
	Expr -> Expr . '+' Expr                             (rule 28)
	Expr -> Expr . '-' Expr                             (rule 29)
	Expr -> Expr . '*' Expr                             (rule 30)
	Expr -> Expr '*' Expr .                             (rule 30)
	Expr -> Expr . '/' Expr                             (rule 31)

	nl             reduce using rule 30
	')'            reduce using rule 30
	','            reduce using rule 30
	';'            shift, and enter state 85
	'}'            reduce using rule 30
	'&&'           reduce using rule 30
	'||'           reduce using rule 30
	'/'            reduce using rule 30
	'+'            reduce using rule 30
	'-'            reduce using rule 30
	'*'            reduce using rule 30
	'$'            reduce using rule 30
	CMP            reduce using rule 30
	in             reduce using rule 30
	then           reduce using rule 30
	else           reduce using rule 30
	with           reduce using rule 30
	of             reduce using rule 30
	%eof           reduce using rule 30


State 130

	Expr -> Expr . '$' Expr                             (rule 17)
	Expr -> Expr . ';' Expr                             (rule 19)
	Expr -> Expr . '||' Expr                            (rule 25)
	Expr -> Expr . '&&' Expr                            (rule 26)
	Expr -> Expr . CMP Expr                             (rule 27)
	Expr -> Expr . '+' Expr                             (rule 28)
	Expr -> Expr . '-' Expr                             (rule 29)
	Expr -> Expr '-' Expr .                             (rule 29)
	Expr -> Expr . '*' Expr                             (rule 30)
	Expr -> Expr . '/' Expr                             (rule 31)

	nl             reduce using rule 29
	')'            reduce using rule 29
	','            reduce using rule 29
	';'            shift, and enter state 85
	'}'            reduce using rule 29
	'&&'           reduce using rule 29
	'||'           reduce using rule 29
	'/'            shift, and enter state 88
	'+'            reduce using rule 29
	'-'            reduce using rule 29
	'*'            shift, and enter state 91
	'$'            reduce using rule 29
	CMP            reduce using rule 29
	in             reduce using rule 29
	then           reduce using rule 29
	else           reduce using rule 29
	with           reduce using rule 29
	of             reduce using rule 29
	%eof           reduce using rule 29


State 131

	Expr -> Expr . '$' Expr                             (rule 17)
	Expr -> Expr . ';' Expr                             (rule 19)
	Expr -> Expr . '||' Expr                            (rule 25)
	Expr -> Expr . '&&' Expr                            (rule 26)
	Expr -> Expr . CMP Expr                             (rule 27)
	Expr -> Expr . '+' Expr                             (rule 28)
	Expr -> Expr '+' Expr .                             (rule 28)
	Expr -> Expr . '-' Expr                             (rule 29)
	Expr -> Expr . '*' Expr                             (rule 30)
	Expr -> Expr . '/' Expr                             (rule 31)

	nl             reduce using rule 28
	')'            reduce using rule 28
	','            reduce using rule 28
	';'            shift, and enter state 85
	'}'            reduce using rule 28
	'&&'           reduce using rule 28
	'||'           reduce using rule 28
	'/'            shift, and enter state 88
	'+'            reduce using rule 28
	'-'            reduce using rule 28
	'*'            shift, and enter state 91
	'$'            reduce using rule 28
	CMP            reduce using rule 28
	in             reduce using rule 28
	then           reduce using rule 28
	else           reduce using rule 28
	with           reduce using rule 28
	of             reduce using rule 28
	%eof           reduce using rule 28


State 132

	Expr -> Expr . '$' Expr                             (rule 17)
	Expr -> Expr . ';' Expr                             (rule 19)
	Expr -> Expr . '||' Expr                            (rule 25)
	Expr -> Expr . '&&' Expr                            (rule 26)
	Expr -> Expr . CMP Expr                             (rule 27)
	Expr -> Expr . '+' Expr                             (rule 28)
	Expr -> Expr . '-' Expr                             (rule 29)
	Expr -> Expr . '*' Expr                             (rule 30)
	Expr -> Expr . '/' Expr                             (rule 31)
	Expr -> Expr '/' Expr .                             (rule 31)

	nl             reduce using rule 31
	')'            reduce using rule 31
	','            reduce using rule 31
	';'            shift, and enter state 85
	'}'            reduce using rule 31
	'&&'           reduce using rule 31
	'||'           reduce using rule 31
	'/'            reduce using rule 31
	'+'            reduce using rule 31
	'-'            reduce using rule 31
	'*'            reduce using rule 31
	'$'            reduce using rule 31
	CMP            reduce using rule 31
	in             reduce using rule 31
	then           reduce using rule 31
	else           reduce using rule 31
	with           reduce using rule 31
	of             reduce using rule 31
	%eof           reduce using rule 31


State 133

	Expr -> Expr . '$' Expr                             (rule 17)
	Expr -> Expr . ';' Expr                             (rule 19)
	Expr -> Expr . '||' Expr                            (rule 25)
	Expr -> Expr '||' Expr .                            (rule 25)
	Expr -> Expr . '&&' Expr                            (rule 26)
	Expr -> Expr . CMP Expr                             (rule 27)
	Expr -> Expr . '+' Expr                             (rule 28)
	Expr -> Expr . '-' Expr                             (rule 29)
	Expr -> Expr . '*' Expr                             (rule 30)
	Expr -> Expr . '/' Expr                             (rule 31)

	nl             reduce using rule 25
	')'            reduce using rule 25
	','            reduce using rule 25
	';'            shift, and enter state 85
	'}'            reduce using rule 25
	'&&'           shift, and enter state 86
	'||'           reduce using rule 25
	'/'            shift, and enter state 88
	'+'            shift, and enter state 89
	'-'            shift, and enter state 90
	'*'            shift, and enter state 91
	'$'            reduce using rule 25
	CMP            shift, and enter state 93
	in             reduce using rule 25
	then           reduce using rule 25
	else           reduce using rule 25
	with           reduce using rule 25
	of             reduce using rule 25
	%eof           reduce using rule 25


State 134

	Expr -> Expr . '$' Expr                             (rule 17)
	Expr -> Expr . ';' Expr                             (rule 19)
	Expr -> Expr . '||' Expr                            (rule 25)
	Expr -> Expr . '&&' Expr                            (rule 26)
	Expr -> Expr '&&' Expr .                            (rule 26)
	Expr -> Expr . CMP Expr                             (rule 27)
	Expr -> Expr . '+' Expr                             (rule 28)
	Expr -> Expr . '-' Expr                             (rule 29)
	Expr -> Expr . '*' Expr                             (rule 30)
	Expr -> Expr . '/' Expr                             (rule 31)

	nl             reduce using rule 26
	')'            reduce using rule 26
	','            reduce using rule 26
	';'            shift, and enter state 85
	'}'            reduce using rule 26
	'&&'           reduce using rule 26
	'||'           reduce using rule 26
	'/'            shift, and enter state 88
	'+'            shift, and enter state 89
	'-'            shift, and enter state 90
	'*'            shift, and enter state 91
	'$'            reduce using rule 26
	CMP            shift, and enter state 93
	in             reduce using rule 26
	then           reduce using rule 26
	else           reduce using rule 26
	with           reduce using rule 26
	of             reduce using rule 26
	%eof           reduce using rule 26


State 135

	Expr -> Expr . '$' Expr                             (rule 17)
	Expr -> Expr . ';' Expr                             (rule 19)
	Expr -> Expr ';' Expr .                             (rule 19)
	Expr -> Expr . '||' Expr                            (rule 25)
	Expr -> Expr . '&&' Expr                            (rule 26)
	Expr -> Expr . CMP Expr                             (rule 27)
	Expr -> Expr . '+' Expr                             (rule 28)
	Expr -> Expr . '-' Expr                             (rule 29)
	Expr -> Expr . '*' Expr                             (rule 30)
	Expr -> Expr . '/' Expr                             (rule 31)

	nl             reduce using rule 19
	')'            reduce using rule 19
	','            reduce using rule 19
	';'            shift, and enter state 85
	'}'            reduce using rule 19
	'&&'           reduce using rule 19
	'||'           reduce using rule 19
	'/'            reduce using rule 19
	'+'            reduce using rule 19
	'-'            reduce using rule 19
	'*'            reduce using rule 19
	'$'            reduce using rule 19
	CMP            reduce using rule 19
	in             reduce using rule 19
	then           reduce using rule 19
	else           reduce using rule 19
	with           reduce using rule 19
	of             reduce using rule 19
	%eof           reduce using rule 19


State 136

	Type -> Type . Arrow Type                           (rule 61)
	Type -> Type . ';' Type                             (rule 64)
	TypeList -> Type .                                  (rule 86)
	TypeList -> Type . ',' TypeList                     (rule 87)

	'->'           shift, and enter state 64
	'-o'           shift, and enter state 65
	','            shift, and enter state 164
	']'            reduce using rule 86
	';'            shift, and enter state 66

	Arrow          goto state 63

State 137

	Primary -> ProgVar '[' TypeList . ']'               (rule 41)

	']'            shift, and enter state 163


State 138

	LambdaProgVarWildTBindList -> ProgVarWildTBind .    (rule 46)
	LambdaProgVarWildTBindList -> ProgVarWildTBind . LambdaProgVarWildTBindList    (rule 47)

	'->'           reduce using rule 46
	'-o'           reduce using rule 46
	'_'            shift, and enter state 78
	LOWER_ID       shift, and enter state 9

	ProgVarWildTBindgoto state 138
	LambdaProgVarWildTBindListgoto state 162
	ProgVar        goto state 75
	ProgVarWild    goto state 140

State 139

	Primary -> '(' lambda LambdaProgVarWildTBindList . Arrow Expr ')'    (rule 43)

	'->'           shift, and enter state 64
	'-o'           shift, and enter state 65

	Arrow          goto state 161

State 140

	ProgVarWildTBind -> ProgVarWild . ':' Type          (rule 45)

	':'            shift, and enter state 160


State 141

	Primary -> '(' Tuple ')' .                          (rule 44)

	nl             reduce using rule 44
	'()'           reduce using rule 44
	'('            reduce using rule 44
	')'            reduce using rule 44
	','            reduce using rule 44
	';'            reduce using rule 44
	'}'            reduce using rule 44
	'&&'           reduce using rule 44
	'||'           reduce using rule 44
	'/'            reduce using rule 44
	'+'            reduce using rule 44
	'-'            reduce using rule 44
	'*'            reduce using rule 44
	'$'            reduce using rule 44
	CMP            reduce using rule 44
	UPPER_ID       reduce using rule 44
	LOWER_ID       reduce using rule 44
	INT            reduce using rule 44
	BOOL           reduce using rule 44
	CHAR           reduce using rule 44
	in             reduce using rule 44
	then           reduce using rule 44
	else           reduce using rule 44
	with           reduce using rule 44
	of             reduce using rule 44
	%eof           reduce using rule 44


State 142

	Tuple -> Expr ',' . Tuple                           (rule 51)

	'()'           shift, and enter state 41
	'('            shift, and enter state 42
	'-'            shift, and enter state 43
	UPPER_ID       shift, and enter state 44
	LOWER_ID       shift, and enter state 9
	INT            shift, and enter state 45
	BOOL           shift, and enter state 46
	CHAR           shift, and enter state 47
	let            shift, and enter state 48
	if             shift, and enter state 49
	new            shift, and enter state 50
	select         shift, and enter state 51
	match          shift, and enter state 52
	case           shift, and enter state 53

	Expr           goto state 80
	App            goto state 36
	Primary        goto state 37
	Tuple          goto state 159
	ArbitraryProgVargoto state 38
	ProgVar        goto state 39
	Constructor    goto state 40

State 143

	Expr -> let '(' ProgVarWildList . ')' '=' Expr in Expr    (rule 20)

	')'            shift, and enter state 158


State 144

	ProgVarWildList -> ProgVarWild . ',' ProgVarWildList    (rule 48)
	ProgVarWildList -> ProgVarWild . ',' ProgVarWild    (rule 49)

	','            shift, and enter state 157


State 145

	Expr -> let ProgVarWild '=' . Expr in Expr          (rule 18)

	'()'           shift, and enter state 41
	'('            shift, and enter state 42
	'-'            shift, and enter state 43
	UPPER_ID       shift, and enter state 44
	LOWER_ID       shift, and enter state 9
	INT            shift, and enter state 45
	BOOL           shift, and enter state 46
	CHAR           shift, and enter state 47
	let            shift, and enter state 48
	if             shift, and enter state 49
	new            shift, and enter state 50
	select         shift, and enter state 51
	match          shift, and enter state 52
	case           shift, and enter state 53

	Expr           goto state 156
	App            goto state 36
	Primary        goto state 37
	ArbitraryProgVargoto state 38
	ProgVar        goto state 39
	Constructor    goto state 40

State 146

	Expr -> if Expr then . Expr else Expr               (rule 21)

	'()'           shift, and enter state 41
	'('            shift, and enter state 42
	'-'            shift, and enter state 43
	UPPER_ID       shift, and enter state 44
	LOWER_ID       shift, and enter state 9
	INT            shift, and enter state 45
	BOOL           shift, and enter state 46
	CHAR           shift, and enter state 47
	let            shift, and enter state 48
	if             shift, and enter state 49
	new            shift, and enter state 50
	select         shift, and enter state 51
	match          shift, and enter state 52
	case           shift, and enter state 53

	Expr           goto state 155
	App            goto state 36
	Primary        goto state 37
	ArbitraryProgVargoto state 38
	ProgVar        goto state 39
	Constructor    goto state 40

State 147

	Expr -> match Expr with . '{' MatchMap '}'          (rule 23)

	'{'            shift, and enter state 154


State 148

	Expr -> case Expr of . '{' CaseMap '}'              (rule 24)

	'{'            shift, and enter state 153


State 149

	NL -> nl NL .                                       (rule 8)

	Int            reduce using rule 8
	Char           reduce using rule 8
	Bool           reduce using rule 8
	'()'           reduce using rule 8
	Skip           reduce using rule 8
	'('            reduce using rule 8
	'!'            reduce using rule 8
	'?'            reduce using rule 8
	'&'            reduce using rule 8
	'+'            reduce using rule 8
	UPPER_ID       reduce using rule 8
	LOWER_ID       reduce using rule 8
	rec            reduce using rule 8
	data           reduce using rule 8
	type           reduce using rule 8
	forall         reduce using rule 8
	dualof         reduce using rule 8


State 150

	Prog -> Decl NL Prog .                              (rule 7)

	%eof           reduce using rule 7


State 151

	Type -> Type . Arrow Type                           (rule 61)
	Type -> Type . ';' Type                             (rule 64)
	Type -> Type ';' Type .                             (rule 64)

	nl             reduce using rule 64
	Int            reduce using rule 64
	Char           reduce using rule 64
	Bool           reduce using rule 64
	'()'           reduce using rule 64
	'->'           reduce using rule 64
	'-o'           reduce using rule 64
	Skip           reduce using rule 64
	'('            reduce using rule 64
	')'            reduce using rule 64
	','            reduce using rule 64
	']'            reduce using rule 64
	';'            shift, and enter state 66
	'!'            reduce using rule 64
	'?'            reduce using rule 64
	'}'            reduce using rule 64
	'&&'           reduce using rule 64
	'||'           reduce using rule 64
	'/'            reduce using rule 64
	'&'            reduce using rule 64
	'+'            reduce using rule 64
	'-'            reduce using rule 64
	'*'            reduce using rule 64
	'_'            reduce using rule 64
	'$'            reduce using rule 64
	CMP            reduce using rule 64
	UPPER_ID       reduce using rule 64
	LOWER_ID       reduce using rule 64
	rec            reduce using rule 64
	in             reduce using rule 64
	'|'            reduce using rule 64
	then           reduce using rule 64
	else           reduce using rule 64
	with           reduce using rule 64
	of             reduce using rule 64
	dualof         reduce using rule 64
	%eof           reduce using rule 64

	Arrow          goto state 63

State 152

	Type -> Type . Arrow Type                           (rule 61)
	Type -> Type Arrow Type .                           (rule 61)
	Type -> Type . ';' Type                             (rule 64)

	nl             reduce using rule 61
	Int            reduce using rule 61
	Char           reduce using rule 61
	Bool           reduce using rule 61
	'()'           reduce using rule 61
	'->'           shift, and enter state 64
			(reduce using rule 61)

	'-o'           shift, and enter state 65
			(reduce using rule 61)

	Skip           reduce using rule 61
	'('            reduce using rule 61
	')'            reduce using rule 61
	','            reduce using rule 61
	']'            reduce using rule 61
	';'            shift, and enter state 66
			(reduce using rule 61)

	'!'            reduce using rule 61
	'?'            reduce using rule 61
	'}'            reduce using rule 61
	'&&'           reduce using rule 61
	'||'           reduce using rule 61
	'/'            reduce using rule 61
	'&'            reduce using rule 61
	'+'            reduce using rule 61
	'-'            reduce using rule 61
	'*'            reduce using rule 61
	'_'            reduce using rule 61
	'$'            reduce using rule 61
	CMP            reduce using rule 61
	UPPER_ID       reduce using rule 61
	LOWER_ID       reduce using rule 61
	rec            reduce using rule 61
	in             reduce using rule 61
	'|'            reduce using rule 61
	then           reduce using rule 61
	else           reduce using rule 61
	with           reduce using rule 61
	of             reduce using rule 61
	dualof         reduce using rule 61
	%eof           reduce using rule 61

	Arrow          goto state 63

State 153

	Expr -> case Expr of '{' . CaseMap '}'              (rule 24)

	UPPER_ID       shift, and enter state 44

	CaseMap        goto state 194
	Case           goto state 195
	Constructor    goto state 196

State 154

	Expr -> match Expr with '{' . MatchMap '}'          (rule 23)

	UPPER_ID       shift, and enter state 44
	LOWER_ID       shift, and enter state 9

	MatchMap       goto state 191
	Match          goto state 192
	ArbitraryProgVargoto state 193
	ProgVar        goto state 72
	Constructor    goto state 40

State 155

	Expr -> Expr . '$' Expr                             (rule 17)
	Expr -> Expr . ';' Expr                             (rule 19)
	Expr -> if Expr then Expr . else Expr               (rule 21)
	Expr -> Expr . '||' Expr                            (rule 25)
	Expr -> Expr . '&&' Expr                            (rule 26)
	Expr -> Expr . CMP Expr                             (rule 27)
	Expr -> Expr . '+' Expr                             (rule 28)
	Expr -> Expr . '-' Expr                             (rule 29)
	Expr -> Expr . '*' Expr                             (rule 30)
	Expr -> Expr . '/' Expr                             (rule 31)

	';'            shift, and enter state 85
	'&&'           shift, and enter state 86
	'||'           shift, and enter state 87
	'/'            shift, and enter state 88
	'+'            shift, and enter state 89
	'-'            shift, and enter state 90
	'*'            shift, and enter state 91
	'$'            shift, and enter state 92
	CMP            shift, and enter state 93
	else           shift, and enter state 190


State 156

	Expr -> Expr . '$' Expr                             (rule 17)
	Expr -> let ProgVarWild '=' Expr . in Expr          (rule 18)
	Expr -> Expr . ';' Expr                             (rule 19)
	Expr -> Expr . '||' Expr                            (rule 25)
	Expr -> Expr . '&&' Expr                            (rule 26)
	Expr -> Expr . CMP Expr                             (rule 27)
	Expr -> Expr . '+' Expr                             (rule 28)
	Expr -> Expr . '-' Expr                             (rule 29)
	Expr -> Expr . '*' Expr                             (rule 30)
	Expr -> Expr . '/' Expr                             (rule 31)

	';'            shift, and enter state 85
	'&&'           shift, and enter state 86
	'||'           shift, and enter state 87
	'/'            shift, and enter state 88
	'+'            shift, and enter state 89
	'-'            shift, and enter state 90
	'*'            shift, and enter state 91
	'$'            shift, and enter state 92
	CMP            shift, and enter state 93
	in             shift, and enter state 189


State 157

	ProgVarWildList -> ProgVarWild ',' . ProgVarWildList    (rule 48)
	ProgVarWildList -> ProgVarWild ',' . ProgVarWild    (rule 49)

	'_'            shift, and enter state 78
	LOWER_ID       shift, and enter state 9

	ProgVarWildListgoto state 187
	ProgVar        goto state 75
	ProgVarWild    goto state 188

State 158

	Expr -> let '(' ProgVarWildList ')' . '=' Expr in Expr    (rule 20)

	'='            shift, and enter state 186


State 159

	Tuple -> Expr ',' Tuple .                           (rule 51)

	')'            reduce using rule 51


State 160

	ProgVarWildTBind -> ProgVarWild ':' . Type          (rule 45)

	Int            shift, and enter state 20
	Char           shift, and enter state 21
	Bool           shift, and enter state 22
	'()'           shift, and enter state 23
	Skip           shift, and enter state 24
	'('            shift, and enter state 25
	'!'            shift, and enter state 26
	'?'            shift, and enter state 27
	'&'            shift, and enter state 28
	'+'            shift, and enter state 29
	UPPER_ID       shift, and enter state 30
	LOWER_ID       shift, and enter state 31
	rec            shift, and enter state 32
	dualof         shift, and enter state 34

	Type           goto state 185
	BasicType      goto state 14
	Polarity       goto state 15
	ChoiceView     goto state 16
	TypeVar        goto state 17
	TypeName       goto state 18

State 161

	Primary -> '(' lambda LambdaProgVarWildTBindList Arrow . Expr ')'    (rule 43)

	'()'           shift, and enter state 41
	'('            shift, and enter state 42
	'-'            shift, and enter state 43
	UPPER_ID       shift, and enter state 44
	LOWER_ID       shift, and enter state 9
	INT            shift, and enter state 45
	BOOL           shift, and enter state 46
	CHAR           shift, and enter state 47
	let            shift, and enter state 48
	if             shift, and enter state 49
	new            shift, and enter state 50
	select         shift, and enter state 51
	match          shift, and enter state 52
	case           shift, and enter state 53

	Expr           goto state 184
	App            goto state 36
	Primary        goto state 37
	ArbitraryProgVargoto state 38
	ProgVar        goto state 39
	Constructor    goto state 40

State 162

	LambdaProgVarWildTBindList -> ProgVarWildTBind LambdaProgVarWildTBindList .    (rule 47)

	'->'           reduce using rule 47
	'-o'           reduce using rule 47


State 163

	Primary -> ProgVar '[' TypeList ']' .               (rule 41)

	nl             reduce using rule 41
	'()'           reduce using rule 41
	'('            reduce using rule 41
	')'            reduce using rule 41
	','            reduce using rule 41
	';'            reduce using rule 41
	'}'            reduce using rule 41
	'&&'           reduce using rule 41
	'||'           reduce using rule 41
	'/'            reduce using rule 41
	'+'            reduce using rule 41
	'-'            reduce using rule 41
	'*'            reduce using rule 41
	'$'            reduce using rule 41
	CMP            reduce using rule 41
	UPPER_ID       reduce using rule 41
	LOWER_ID       reduce using rule 41
	INT            reduce using rule 41
	BOOL           reduce using rule 41
	CHAR           reduce using rule 41
	in             reduce using rule 41
	then           reduce using rule 41
	else           reduce using rule 41
	with           reduce using rule 41
	of             reduce using rule 41
	%eof           reduce using rule 41


State 164

	TypeList -> Type ',' . TypeList                     (rule 87)

	Int            shift, and enter state 20
	Char           shift, and enter state 21
	Bool           shift, and enter state 22
	'()'           shift, and enter state 23
	Skip           shift, and enter state 24
	'('            shift, and enter state 25
	'!'            shift, and enter state 26
	'?'            shift, and enter state 27
	'&'            shift, and enter state 28
	'+'            shift, and enter state 29
	UPPER_ID       shift, and enter state 30
	LOWER_ID       shift, and enter state 31
	rec            shift, and enter state 32
	dualof         shift, and enter state 34

	Type           goto state 136
	BasicType      goto state 14
	Polarity       goto state 15
	ChoiceView     goto state 16
	TypeList       goto state 183
	TypeVar        goto state 17
	TypeName       goto state 18

State 165

	KindBind -> TypeVar ':' Kind .                      (rule 104)

	','            reduce using rule 104
	'=>'           reduce using rule 104
	'.'            reduce using rule 104
	'='            reduce using rule 104


State 166

	KindBindList -> KindBind ',' KindBindList .         (rule 109)

	'=>'           reduce using rule 109
	'='            reduce using rule 109


State 167

	TypeScheme -> forall KindBindList '=>' Type .       (rule 58)
	Type -> Type . Arrow Type                           (rule 61)
	Type -> Type . ';' Type                             (rule 64)

	nl             reduce using rule 58
	'->'           shift, and enter state 64
	'-o'           shift, and enter state 65
	';'            shift, and enter state 66
	%eof           reduce using rule 58

	Arrow          goto state 63

State 168

	Type -> Type . Arrow Type                           (rule 61)
	Type -> Type . ';' Type                             (rule 64)
	Type -> rec KindBind '.' Type .                     (rule 67)

	nl             reduce using rule 67
	Int            reduce using rule 67
	Char           reduce using rule 67
	Bool           reduce using rule 67
	'()'           reduce using rule 67
	'->'           shift, and enter state 64
	'-o'           shift, and enter state 65
	Skip           reduce using rule 67
	'('            reduce using rule 67
	')'            reduce using rule 67
	','            reduce using rule 67
	']'            reduce using rule 67
	';'            shift, and enter state 66
	'!'            reduce using rule 67
	'?'            reduce using rule 67
	'}'            reduce using rule 67
	'&&'           reduce using rule 67
	'||'           reduce using rule 67
	'/'            reduce using rule 67
	'&'            reduce using rule 67
	'+'            reduce using rule 67
	'-'            reduce using rule 67
	'*'            reduce using rule 67
	'_'            reduce using rule 67
	'$'            reduce using rule 67
	CMP            reduce using rule 67
	UPPER_ID       reduce using rule 67
	LOWER_ID       reduce using rule 67
	rec            reduce using rule 67
	in             reduce using rule 67
	'|'            reduce using rule 67
	then           reduce using rule 67
	else           reduce using rule 67
	with           reduce using rule 67
	of             reduce using rule 67
	dualof         reduce using rule 67
	%eof           reduce using rule 67

	Arrow          goto state 63

State 169

	TupleType -> Type ',' TupleType .                   (rule 76)

	')'            reduce using rule 76


State 170

	Field -> ArbitraryProgVar ':' . Type                (rule 85)

	Int            shift, and enter state 20
	Char           shift, and enter state 21
	Bool           shift, and enter state 22
	'()'           shift, and enter state 23
	Skip           shift, and enter state 24
	'('            shift, and enter state 25
	'!'            shift, and enter state 26
	'?'            shift, and enter state 27
	'&'            shift, and enter state 28
	'+'            shift, and enter state 29
	UPPER_ID       shift, and enter state 30
	LOWER_ID       shift, and enter state 31
	rec            shift, and enter state 32
	dualof         shift, and enter state 34

	Type           goto state 182
	BasicType      goto state 14
	Polarity       goto state 15
	ChoiceView     goto state 16
	TypeVar        goto state 17
	TypeName       goto state 18

State 171

	FieldList -> Field ',' . FieldList                  (rule 84)

	UPPER_ID       shift, and enter state 44
	LOWER_ID       shift, and enter state 9

	FieldList      goto state 181
	Field          goto state 119
	ArbitraryProgVargoto state 120
	ProgVar        goto state 72
	Constructor    goto state 40

State 172

	Type -> ChoiceView '{' FieldList '}' .              (rule 66)

	nl             reduce using rule 66
	Int            reduce using rule 66
	Char           reduce using rule 66
	Bool           reduce using rule 66
	'()'           reduce using rule 66
	'->'           reduce using rule 66
	'-o'           reduce using rule 66
	Skip           reduce using rule 66
	'('            reduce using rule 66
	')'            reduce using rule 66
	','            reduce using rule 66
	']'            reduce using rule 66
	';'            reduce using rule 66
	'!'            reduce using rule 66
	'?'            reduce using rule 66
	'}'            reduce using rule 66
	'&&'           reduce using rule 66
	'||'           reduce using rule 66
	'/'            reduce using rule 66
	'&'            reduce using rule 66
	'+'            reduce using rule 66
	'-'            reduce using rule 66
	'*'            reduce using rule 66
	'_'            reduce using rule 66
	'$'            reduce using rule 66
	CMP            reduce using rule 66
	UPPER_ID       reduce using rule 66
	LOWER_ID       reduce using rule 66
	rec            reduce using rule 66
	in             reduce using rule 66
	'|'            reduce using rule 66
	then           reduce using rule 66
	else           reduce using rule 66
	with           reduce using rule 66
	of             reduce using rule 66
	dualof         reduce using rule 66
	%eof           reduce using rule 66


State 173

	TypeNameKind -> TypeName ':' Kind .                 (rule 106)

	LOWER_ID       reduce using rule 106
	'='            reduce using rule 106


State 174

	Decl -> type TypeNameKind KindBindEmptyList '=' . Type    (rule 12)

	Int            shift, and enter state 20
	Char           shift, and enter state 21
	Bool           shift, and enter state 22
	'()'           shift, and enter state 23
	Skip           shift, and enter state 24
	'('            shift, and enter state 25
	'!'            shift, and enter state 26
	'?'            shift, and enter state 27
	'&'            shift, and enter state 28
	'+'            shift, and enter state 29
	UPPER_ID       shift, and enter state 30
	LOWER_ID       shift, and enter state 31
	rec            shift, and enter state 32
	dualof         shift, and enter state 34

	Type           goto state 180
	BasicType      goto state 14
	Polarity       goto state 15
	ChoiceView     goto state 16
	TypeVar        goto state 17
	TypeName       goto state 18

State 175

	Decl -> data TypeNameKind KindBindEmptyList '=' . DataCons    (rule 13)

	UPPER_ID       shift, and enter state 44

	DataCons       goto state 177
	DataCon        goto state 178
	Constructor    goto state 179

State 176

	Decl -> ProgVar ProgVarWildSeq '=' Expr .           (rule 11)
	Expr -> Expr . '$' Expr                             (rule 17)
	Expr -> Expr . ';' Expr                             (rule 19)
	Expr -> Expr . '||' Expr                            (rule 25)
	Expr -> Expr . '&&' Expr                            (rule 26)
	Expr -> Expr . CMP Expr                             (rule 27)
	Expr -> Expr . '+' Expr                             (rule 28)
	Expr -> Expr . '-' Expr                             (rule 29)
	Expr -> Expr . '*' Expr                             (rule 30)
	Expr -> Expr . '/' Expr                             (rule 31)

	nl             reduce using rule 11
	';'            shift, and enter state 85
	'&&'           shift, and enter state 86
	'||'           shift, and enter state 87
	'/'            shift, and enter state 88
	'+'            shift, and enter state 89
	'-'            shift, and enter state 90
	'*'            shift, and enter state 91
	'$'            shift, and enter state 92
	CMP            shift, and enter state 93
	%eof           reduce using rule 11


State 177

	Decl -> data TypeNameKind KindBindEmptyList '=' DataCons .    (rule 13)

	nl             reduce using rule 13
	%eof           reduce using rule 13


State 178

	DataCons -> DataCon .                               (rule 14)
	DataCons -> DataCon . '|' DataCons                  (rule 15)

	nl             reduce using rule 14
	'|'            shift, and enter state 209
	%eof           reduce using rule 14


State 179

	DataCon -> Constructor . TypeSeq                    (rule 16)

	nl             reduce using rule 88
	Int            shift, and enter state 20
	Char           shift, and enter state 21
	Bool           shift, and enter state 22
	'()'           shift, and enter state 23
	Skip           shift, and enter state 24
	'('            shift, and enter state 25
	'!'            shift, and enter state 26
	'?'            shift, and enter state 27
	'&'            shift, and enter state 28
	'+'            shift, and enter state 29
	UPPER_ID       shift, and enter state 30
	LOWER_ID       shift, and enter state 31
	rec            shift, and enter state 32
	'|'            reduce using rule 88
	dualof         shift, and enter state 34
	%eof           reduce using rule 88

	Type           goto state 207
	BasicType      goto state 14
	Polarity       goto state 15
	ChoiceView     goto state 16
	TypeSeq        goto state 208
	TypeVar        goto state 17
	TypeName       goto state 18

State 180

	Decl -> type TypeNameKind KindBindEmptyList '=' Type .    (rule 12)
	Type -> Type . Arrow Type                           (rule 61)
	Type -> Type . ';' Type                             (rule 64)

	nl             reduce using rule 12
	'->'           shift, and enter state 64
	'-o'           shift, and enter state 65
	';'            shift, and enter state 66
	%eof           reduce using rule 12

	Arrow          goto state 63

State 181

	FieldList -> Field ',' FieldList .                  (rule 84)

	'}'            reduce using rule 84


State 182

	Type -> Type . Arrow Type                           (rule 61)
	Type -> Type . ';' Type                             (rule 64)
	Field -> ArbitraryProgVar ':' Type .                (rule 85)

	'->'           shift, and enter state 64
	'-o'           shift, and enter state 65
	','            reduce using rule 85
	';'            shift, and enter state 66
	'}'            reduce using rule 85

	Arrow          goto state 63

State 183

	TypeList -> Type ',' TypeList .                     (rule 87)

	']'            reduce using rule 87


State 184

	Expr -> Expr . '$' Expr                             (rule 17)
	Expr -> Expr . ';' Expr                             (rule 19)
	Expr -> Expr . '||' Expr                            (rule 25)
	Expr -> Expr . '&&' Expr                            (rule 26)
	Expr -> Expr . CMP Expr                             (rule 27)
	Expr -> Expr . '+' Expr                             (rule 28)
	Expr -> Expr . '-' Expr                             (rule 29)
	Expr -> Expr . '*' Expr                             (rule 30)
	Expr -> Expr . '/' Expr                             (rule 31)
	Primary -> '(' lambda LambdaProgVarWildTBindList Arrow Expr . ')'    (rule 43)

	')'            shift, and enter state 206
	';'            shift, and enter state 85
	'&&'           shift, and enter state 86
	'||'           shift, and enter state 87
	'/'            shift, and enter state 88
	'+'            shift, and enter state 89
	'-'            shift, and enter state 90
	'*'            shift, and enter state 91
	'$'            shift, and enter state 92
	CMP            shift, and enter state 93


State 185

	ProgVarWildTBind -> ProgVarWild ':' Type .          (rule 45)
	Type -> Type . Arrow Type                           (rule 61)
	Type -> Type . ';' Type                             (rule 64)

	'->'           reduce using rule 45
	'-o'           reduce using rule 45
	';'            shift, and enter state 66
	'_'            reduce using rule 45
	LOWER_ID       reduce using rule 45

	Arrow          goto state 63

State 186

	Expr -> let '(' ProgVarWildList ')' '=' . Expr in Expr    (rule 20)

	'()'           shift, and enter state 41
	'('            shift, and enter state 42
	'-'            shift, and enter state 43
	UPPER_ID       shift, and enter state 44
	LOWER_ID       shift, and enter state 9
	INT            shift, and enter state 45
	BOOL           shift, and enter state 46
	CHAR           shift, and enter state 47
	let            shift, and enter state 48
	if             shift, and enter state 49
	new            shift, and enter state 50
	select         shift, and enter state 51
	match          shift, and enter state 52
	case           shift, and enter state 53

	Expr           goto state 205
	App            goto state 36
	Primary        goto state 37
	ArbitraryProgVargoto state 38
	ProgVar        goto state 39
	Constructor    goto state 40

State 187

	ProgVarWildList -> ProgVarWild ',' ProgVarWildList .    (rule 48)

	')'            reduce using rule 48


State 188

	ProgVarWildList -> ProgVarWild . ',' ProgVarWildList    (rule 48)
	ProgVarWildList -> ProgVarWild . ',' ProgVarWild    (rule 49)
	ProgVarWildList -> ProgVarWild ',' ProgVarWild .    (rule 49)

	')'            reduce using rule 49
	','            shift, and enter state 157


State 189

	Expr -> let ProgVarWild '=' Expr in . Expr          (rule 18)

	'()'           shift, and enter state 41
	'('            shift, and enter state 42
	'-'            shift, and enter state 43
	UPPER_ID       shift, and enter state 44
	LOWER_ID       shift, and enter state 9
	INT            shift, and enter state 45
	BOOL           shift, and enter state 46
	CHAR           shift, and enter state 47
	let            shift, and enter state 48
	if             shift, and enter state 49
	new            shift, and enter state 50
	select         shift, and enter state 51
	match          shift, and enter state 52
	case           shift, and enter state 53

	Expr           goto state 204
	App            goto state 36
	Primary        goto state 37
	ArbitraryProgVargoto state 38
	ProgVar        goto state 39
	Constructor    goto state 40

State 190

	Expr -> if Expr then Expr else . Expr               (rule 21)

	'()'           shift, and enter state 41
	'('            shift, and enter state 42
	'-'            shift, and enter state 43
	UPPER_ID       shift, and enter state 44
	LOWER_ID       shift, and enter state 9
	INT            shift, and enter state 45
	BOOL           shift, and enter state 46
	CHAR           shift, and enter state 47
	let            shift, and enter state 48
	if             shift, and enter state 49
	new            shift, and enter state 50
	select         shift, and enter state 51
	match          shift, and enter state 52
	case           shift, and enter state 53

	Expr           goto state 203
	App            goto state 36
	Primary        goto state 37
	ArbitraryProgVargoto state 38
	ProgVar        goto state 39
	Constructor    goto state 40

State 191

	Expr -> match Expr with '{' MatchMap . '}'          (rule 23)

	'}'            shift, and enter state 202


State 192

	MatchMap -> Match .                                 (rule 52)
	MatchMap -> Match . ',' MatchMap                    (rule 53)

	','            shift, and enter state 201
	'}'            reduce using rule 52


State 193

	Match -> ArbitraryProgVar . ProgVarWild '->' Expr    (rule 54)

	'_'            shift, and enter state 78
	LOWER_ID       shift, and enter state 9

	ProgVar        goto state 75
	ProgVarWild    goto state 200

State 194

	Expr -> case Expr of '{' CaseMap . '}'              (rule 24)

	'}'            shift, and enter state 199


State 195

	CaseMap -> Case .                                   (rule 55)
	CaseMap -> Case . ',' CaseMap                       (rule 56)

	','            shift, and enter state 198
	'}'            reduce using rule 55


State 196

	Case -> Constructor . ProgVarWildSeq '->' Expr      (rule 57)

	'->'           reduce using rule 100
	'_'            shift, and enter state 78
	LOWER_ID       shift, and enter state 9

	ProgVar        goto state 75
	ProgVarWild    goto state 107
	ProgVarWildSeq goto state 197

State 197

	Case -> Constructor ProgVarWildSeq . '->' Expr      (rule 57)

	'->'           shift, and enter state 216


State 198

	CaseMap -> Case ',' . CaseMap                       (rule 56)

	UPPER_ID       shift, and enter state 44

	CaseMap        goto state 215
	Case           goto state 195
	Constructor    goto state 196

State 199

	Expr -> case Expr of '{' CaseMap '}' .              (rule 24)

	nl             reduce using rule 24
	')'            reduce using rule 24
	','            reduce using rule 24
	';'            reduce using rule 24
	'}'            reduce using rule 24
	'&&'           reduce using rule 24
	'||'           reduce using rule 24
	'/'            reduce using rule 24
	'+'            reduce using rule 24
	'-'            reduce using rule 24
	'*'            reduce using rule 24
	'$'            reduce using rule 24
	CMP            reduce using rule 24
	in             reduce using rule 24
	then           reduce using rule 24
	else           reduce using rule 24
	with           reduce using rule 24
	of             reduce using rule 24
	%eof           reduce using rule 24


State 200

	Match -> ArbitraryProgVar ProgVarWild . '->' Expr    (rule 54)

	'->'           shift, and enter state 214


State 201

	MatchMap -> Match ',' . MatchMap                    (rule 53)

	UPPER_ID       shift, and enter state 44
	LOWER_ID       shift, and enter state 9

	MatchMap       goto state 213
	Match          goto state 192
	ArbitraryProgVargoto state 193
	ProgVar        goto state 72
	Constructor    goto state 40

State 202

	Expr -> match Expr with '{' MatchMap '}' .          (rule 23)

	nl             reduce using rule 23
	')'            reduce using rule 23
	','            reduce using rule 23
	';'            reduce using rule 23
	'}'            reduce using rule 23
	'&&'           reduce using rule 23
	'||'           reduce using rule 23
	'/'            reduce using rule 23
	'+'            reduce using rule 23
	'-'            reduce using rule 23
	'*'            reduce using rule 23
	'$'            reduce using rule 23
	CMP            reduce using rule 23
	in             reduce using rule 23
	then           reduce using rule 23
	else           reduce using rule 23
	with           reduce using rule 23
	of             reduce using rule 23
	%eof           reduce using rule 23


State 203

	Expr -> Expr . '$' Expr                             (rule 17)
	Expr -> Expr . ';' Expr                             (rule 19)
	Expr -> if Expr then Expr else Expr .               (rule 21)
	Expr -> Expr . '||' Expr                            (rule 25)
	Expr -> Expr . '&&' Expr                            (rule 26)
	Expr -> Expr . CMP Expr                             (rule 27)
	Expr -> Expr . '+' Expr                             (rule 28)
	Expr -> Expr . '-' Expr                             (rule 29)
	Expr -> Expr . '*' Expr                             (rule 30)
	Expr -> Expr . '/' Expr                             (rule 31)

	nl             reduce using rule 21
	')'            reduce using rule 21
	','            reduce using rule 21
	';'            shift, and enter state 85
	'}'            reduce using rule 21
	'&&'           shift, and enter state 86
	'||'           shift, and enter state 87
	'/'            shift, and enter state 88
	'+'            shift, and enter state 89
	'-'            shift, and enter state 90
	'*'            shift, and enter state 91
	'$'            shift, and enter state 92
	CMP            shift, and enter state 93
	in             reduce using rule 21
	then           reduce using rule 21
	else           reduce using rule 21
	with           reduce using rule 21
	of             reduce using rule 21
	%eof           reduce using rule 21


State 204

	Expr -> Expr . '$' Expr                             (rule 17)
	Expr -> let ProgVarWild '=' Expr in Expr .          (rule 18)
	Expr -> Expr . ';' Expr                             (rule 19)
	Expr -> Expr . '||' Expr                            (rule 25)
	Expr -> Expr . '&&' Expr                            (rule 26)
	Expr -> Expr . CMP Expr                             (rule 27)
	Expr -> Expr . '+' Expr                             (rule 28)
	Expr -> Expr . '-' Expr                             (rule 29)
	Expr -> Expr . '*' Expr                             (rule 30)
	Expr -> Expr . '/' Expr                             (rule 31)

	nl             reduce using rule 18
	')'            reduce using rule 18
	','            reduce using rule 18
	';'            shift, and enter state 85
	'}'            reduce using rule 18
	'&&'           shift, and enter state 86
	'||'           shift, and enter state 87
	'/'            shift, and enter state 88
	'+'            shift, and enter state 89
	'-'            shift, and enter state 90
	'*'            shift, and enter state 91
	'$'            shift, and enter state 92
	CMP            shift, and enter state 93
	in             reduce using rule 18
	then           reduce using rule 18
	else           reduce using rule 18
	with           reduce using rule 18
	of             reduce using rule 18
	%eof           reduce using rule 18


State 205

	Expr -> Expr . '$' Expr                             (rule 17)
	Expr -> Expr . ';' Expr                             (rule 19)
	Expr -> let '(' ProgVarWildList ')' '=' Expr . in Expr    (rule 20)
	Expr -> Expr . '||' Expr                            (rule 25)
	Expr -> Expr . '&&' Expr                            (rule 26)
	Expr -> Expr . CMP Expr                             (rule 27)
	Expr -> Expr . '+' Expr                             (rule 28)
	Expr -> Expr . '-' Expr                             (rule 29)
	Expr -> Expr . '*' Expr                             (rule 30)
	Expr -> Expr . '/' Expr                             (rule 31)

	';'            shift, and enter state 85
	'&&'           shift, and enter state 86
	'||'           shift, and enter state 87
	'/'            shift, and enter state 88
	'+'            shift, and enter state 89
	'-'            shift, and enter state 90
	'*'            shift, and enter state 91
	'$'            shift, and enter state 92
	CMP            shift, and enter state 93
	in             shift, and enter state 212


State 206

	Primary -> '(' lambda LambdaProgVarWildTBindList Arrow Expr ')' .    (rule 43)

	nl             reduce using rule 43
	'()'           reduce using rule 43
	'('            reduce using rule 43
	')'            reduce using rule 43
	','            reduce using rule 43
	';'            reduce using rule 43
	'}'            reduce using rule 43
	'&&'           reduce using rule 43
	'||'           reduce using rule 43
	'/'            reduce using rule 43
	'+'            reduce using rule 43
	'-'            reduce using rule 43
	'*'            reduce using rule 43
	'$'            reduce using rule 43
	CMP            reduce using rule 43
	UPPER_ID       reduce using rule 43
	LOWER_ID       reduce using rule 43
	INT            reduce using rule 43
	BOOL           reduce using rule 43
	CHAR           reduce using rule 43
	in             reduce using rule 43
	then           reduce using rule 43
	else           reduce using rule 43
	with           reduce using rule 43
	of             reduce using rule 43
	%eof           reduce using rule 43


State 207

	Type -> Type . Arrow Type                           (rule 61)
	Type -> Type . ';' Type                             (rule 64)
	TypeSeq -> Type . TypeSeq                           (rule 89)

	nl             reduce using rule 88
	Int            shift, and enter state 20
	Char           shift, and enter state 21
	Bool           shift, and enter state 22
	'()'           shift, and enter state 23
	'->'           shift, and enter state 64
	'-o'           shift, and enter state 65
	Skip           shift, and enter state 24
	'('            shift, and enter state 25
	';'            shift, and enter state 66
	'!'            shift, and enter state 26
	'?'            shift, and enter state 27
	'&'            shift, and enter state 28
	'+'            shift, and enter state 29
	UPPER_ID       shift, and enter state 30
	LOWER_ID       shift, and enter state 31
	rec            shift, and enter state 32
	'|'            reduce using rule 88
	dualof         shift, and enter state 34
	%eof           reduce using rule 88

	Type           goto state 207
	BasicType      goto state 14
	Polarity       goto state 15
	Arrow          goto state 63
	ChoiceView     goto state 16
	TypeSeq        goto state 211
	TypeVar        goto state 17
	TypeName       goto state 18

State 208

	DataCon -> Constructor TypeSeq .                    (rule 16)

	nl             reduce using rule 16
	'|'            reduce using rule 16
	%eof           reduce using rule 16


State 209

	DataCons -> DataCon '|' . DataCons                  (rule 15)

	UPPER_ID       shift, and enter state 44

	DataCons       goto state 210
	DataCon        goto state 178
	Constructor    goto state 179

State 210

	DataCons -> DataCon '|' DataCons .                  (rule 15)

	nl             reduce using rule 15
	%eof           reduce using rule 15


State 211

	TypeSeq -> Type TypeSeq .                           (rule 89)

	nl             reduce using rule 89
	'|'            reduce using rule 89
	%eof           reduce using rule 89


State 212

	Expr -> let '(' ProgVarWildList ')' '=' Expr in . Expr    (rule 20)

	'()'           shift, and enter state 41
	'('            shift, and enter state 42
	'-'            shift, and enter state 43
	UPPER_ID       shift, and enter state 44
	LOWER_ID       shift, and enter state 9
	INT            shift, and enter state 45
	BOOL           shift, and enter state 46
	CHAR           shift, and enter state 47
	let            shift, and enter state 48
	if             shift, and enter state 49
	new            shift, and enter state 50
	select         shift, and enter state 51
	match          shift, and enter state 52
	case           shift, and enter state 53

	Expr           goto state 219
	App            goto state 36
	Primary        goto state 37
	ArbitraryProgVargoto state 38
	ProgVar        goto state 39
	Constructor    goto state 40

State 213

	MatchMap -> Match ',' MatchMap .                    (rule 53)

	'}'            reduce using rule 53


State 214

	Match -> ArbitraryProgVar ProgVarWild '->' . Expr    (rule 54)

	'()'           shift, and enter state 41
	'('            shift, and enter state 42
	'-'            shift, and enter state 43
	UPPER_ID       shift, and enter state 44
	LOWER_ID       shift, and enter state 9
	INT            shift, and enter state 45
	BOOL           shift, and enter state 46
	CHAR           shift, and enter state 47
	let            shift, and enter state 48
	if             shift, and enter state 49
	new            shift, and enter state 50
	select         shift, and enter state 51
	match          shift, and enter state 52
	case           shift, and enter state 53

	Expr           goto state 218
	App            goto state 36
	Primary        goto state 37
	ArbitraryProgVargoto state 38
	ProgVar        goto state 39
	Constructor    goto state 40

State 215

	CaseMap -> Case ',' CaseMap .                       (rule 56)

	'}'            reduce using rule 56


State 216

	Case -> Constructor ProgVarWildSeq '->' . Expr      (rule 57)

	'()'           shift, and enter state 41
	'('            shift, and enter state 42
	'-'            shift, and enter state 43
	UPPER_ID       shift, and enter state 44
	LOWER_ID       shift, and enter state 9
	INT            shift, and enter state 45
	BOOL           shift, and enter state 46
	CHAR           shift, and enter state 47
	let            shift, and enter state 48
	if             shift, and enter state 49
	new            shift, and enter state 50
	select         shift, and enter state 51
	match          shift, and enter state 52
	case           shift, and enter state 53

	Expr           goto state 217
	App            goto state 36
	Primary        goto state 37
	ArbitraryProgVargoto state 38
	ProgVar        goto state 39
	Constructor    goto state 40

State 217

	Expr -> Expr . '$' Expr                             (rule 17)
	Expr -> Expr . ';' Expr                             (rule 19)
	Expr -> Expr . '||' Expr                            (rule 25)
	Expr -> Expr . '&&' Expr                            (rule 26)
	Expr -> Expr . CMP Expr                             (rule 27)
	Expr -> Expr . '+' Expr                             (rule 28)
	Expr -> Expr . '-' Expr                             (rule 29)
	Expr -> Expr . '*' Expr                             (rule 30)
	Expr -> Expr . '/' Expr                             (rule 31)
	Case -> Constructor ProgVarWildSeq '->' Expr .      (rule 57)

	','            reduce using rule 57
	';'            shift, and enter state 85
	'}'            reduce using rule 57
	'&&'           shift, and enter state 86
	'||'           shift, and enter state 87
	'/'            shift, and enter state 88
	'+'            shift, and enter state 89
	'-'            shift, and enter state 90
	'*'            shift, and enter state 91
	'$'            shift, and enter state 92
	CMP            shift, and enter state 93


State 218

	Expr -> Expr . '$' Expr                             (rule 17)
	Expr -> Expr . ';' Expr                             (rule 19)
	Expr -> Expr . '||' Expr                            (rule 25)
	Expr -> Expr . '&&' Expr                            (rule 26)
	Expr -> Expr . CMP Expr                             (rule 27)
	Expr -> Expr . '+' Expr                             (rule 28)
	Expr -> Expr . '-' Expr                             (rule 29)
	Expr -> Expr . '*' Expr                             (rule 30)
	Expr -> Expr . '/' Expr                             (rule 31)
	Match -> ArbitraryProgVar ProgVarWild '->' Expr .    (rule 54)

	','            reduce using rule 54
	';'            shift, and enter state 85
	'}'            reduce using rule 54
	'&&'           shift, and enter state 86
	'||'           shift, and enter state 87
	'/'            shift, and enter state 88
	'+'            shift, and enter state 89
	'-'            shift, and enter state 90
	'*'            shift, and enter state 91
	'$'            shift, and enter state 92
	CMP            shift, and enter state 93


State 219

	Expr -> Expr . '$' Expr                             (rule 17)
	Expr -> Expr . ';' Expr                             (rule 19)
	Expr -> let '(' ProgVarWildList ')' '=' Expr in Expr .    (rule 20)
	Expr -> Expr . '||' Expr                            (rule 25)
	Expr -> Expr . '&&' Expr                            (rule 26)
	Expr -> Expr . CMP Expr                             (rule 27)
	Expr -> Expr . '+' Expr                             (rule 28)
	Expr -> Expr . '-' Expr                             (rule 29)
	Expr -> Expr . '*' Expr                             (rule 30)
	Expr -> Expr . '/' Expr                             (rule 31)

	nl             reduce using rule 20
	')'            reduce using rule 20
	','            reduce using rule 20
	';'            shift, and enter state 85
	'}'            reduce using rule 20
	'&&'           shift, and enter state 86
	'||'           shift, and enter state 87
	'/'            shift, and enter state 88
	'+'            shift, and enter state 89
	'-'            shift, and enter state 90
	'*'            shift, and enter state 91
	'$'            shift, and enter state 92
	CMP            shift, and enter state 93
	in             reduce using rule 20
	then           reduce using rule 20
	else           reduce using rule 20
	with           reduce using rule 20
	of             reduce using rule 20
	%eof           reduce using rule 20


-----------------------------------------------------------------------------
Grammar Totals
-----------------------------------------------------------------------------
Number of rules: 113
Number of terminals: 60
Number of non-terminals: 46
Number of states: 220
