
Type = Almanac com Sort Variant
Sort =
Variant =

data List:TU = Nil | Cons Int List 

no TypeEnv fica uma entrada (List,(Kind.TU,Type.Almanac))

Type.Almanac Span Sort TypeMap

Sort -> Variant
TypeMap -> (Variable,Type)
           (Cons    ,Int -> List -> List)
           (Nil     ,List)
           
criar variavel ignorada
| '_'     {% flip mkVar "_" `fmap` mkSpan $1 }

mkVar "_"

--
data T = A | B | C

f : T -> Int
f A = 1
f x = x

[u1]
[([A],1)
,([x],x)
] o

case u1 of 
  A -> 1
  B -> 2
  C -> 2